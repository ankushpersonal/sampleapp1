{"version":3,"file":"ngx-grpc-well-known-types.mjs","sources":["../../../packages/well-known-types/src/lib/google/protobuf/any.pb.ts","../../../packages/well-known-types/src/lib/google/protobuf/source-context.pb.ts","../../../packages/well-known-types/src/lib/google/protobuf/type.pb.ts","../../../packages/well-known-types/src/lib/google/protobuf/api.pb.ts","../../../packages/well-known-types/src/lib/google/protobuf/duration.pb.ts","../../../packages/well-known-types/src/lib/google/protobuf/empty.pb.ts","../../../packages/well-known-types/src/lib/google/protobuf/field-mask.pb.ts","../../../packages/well-known-types/src/lib/google/protobuf/struct.pb.ts","../../../packages/well-known-types/src/lib/google/protobuf/timestamp.pb.ts","../../../packages/well-known-types/src/lib/google/protobuf/wrappers.pb.ts","../../../packages/well-known-types/src/public-api.ts","../../../packages/well-known-types/src/ngx-grpc-well-known-types.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  GrpcMessageClass,\n  GrpcMessagePool,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Any implements GrpcMessage {\n  static id = 'google.protobuf.Any';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Any();\n    Any.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  private static prefix = 'type.googleapis.com/';\n\n  /**\n   * Create a new Any instance with a packed message\n   */\n  static pack(msg: GrpcMessage) {\n    const any = new Any();\n\n    any.pack(msg);\n\n    return any;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Any) {\n    _instance.typeUrl = _instance.typeUrl || '';\n    _instance.value = _instance.value || new Uint8Array();\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Any, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.typeUrl = _reader.readString();\n          break;\n        case 2:\n          _instance.value = _reader.readBytes();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Any.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Any, _writer: BinaryWriter) {\n    if (_instance.typeUrl) {\n      _writer.writeString(1, _instance.typeUrl);\n    }\n    if (_instance.value && _instance.value.length) {\n      _writer.writeBytes(2, _instance.value);\n    }\n  }\n\n  private _typeUrl: string;\n  private _value: Uint8Array;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Any to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Any.AsObject>) {\n    _value = _value || {};\n    this.typeUrl = _value.typeUrl;\n    this.value = _value.value;\n    Any.refineValues(this);\n  }\n  get typeUrl(): string {\n    return this._typeUrl;\n  }\n  set typeUrl(value: string) {\n    this._typeUrl = value;\n  }\n  get value(): Uint8Array {\n    return this._value;\n  }\n  set value(value: Uint8Array) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Any.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Any.AsObject {\n    return {\n      typeUrl: this.typeUrl,\n      value: this.value ? this.value.subarray(0) : new Uint8Array(),\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Any.AsProtobufJSON {\n    if (!options?.messagePool) {\n      throw new Error(`Message pool is required to cast Any to JSON`);\n    }\n\n    const msg = this.unpack(options.messagePool);\n\n    if (!msg) {\n      return { '@type': this.typeUrl! };\n    }\n\n    const json = msg.toProtobufJSON(options);\n\n    if (typeof json !== 'object') {\n      return { '@type': this.typeUrl!, value: json };\n    }\n\n    return { ...json, '@type': this.typeUrl! };\n  }\n\n  /**\n   * Get the packed message id based on typeUrl.\n   * If no typeUrl is provided null is returned.\n   */\n  getPackedMessageId() {\n    if (!this.typeUrl) {\n      return null;\n    }\n\n    if (!this.typeUrl.startsWith(Any.prefix)) {\n      throw new Error(`Type URL does not start with ${Any.prefix}`);\n    }\n\n    return this.typeUrl.substr(Any.prefix.length);\n  }\n\n  /**\n   * Get the type of the packed message.\n   * Requires predefined GrpcMessagePool with expected message types within.\n   * If no type is found within the pool the error is thrown, unless throwWhenNotInThePool is set to false; in this case null will be returned.\n   */\n  getPackedMessageType(\n    messagePool: GrpcMessagePool,\n    throwWhenNotInThePool = true\n  ) {\n    const id = this.getPackedMessageId();\n\n    if (!id) {\n      return null;\n    }\n\n    const msgClass = messagePool.get(id);\n\n    if (!msgClass) {\n      if (throwWhenNotInThePool) {\n        throw new Error(\n          `Message with identifier '${this.typeUrl}' is not present in message pool`\n        );\n      } else {\n        return null;\n      }\n    }\n\n    return msgClass;\n  }\n\n  /**\n   * Unpack the current value into a message.\n   * Requires predefined GrpcMessagePool with expected message types within.\n   * If no type is found within the pool the error is thrown.\n   */\n  unpack<M extends GrpcMessage>(messagePool: GrpcMessagePool): M {\n    const messageClass = this.getPackedMessageType(messagePool);\n\n    if (!messageClass) {\n      throw new Error(`Message type cannot be resolved`);\n    }\n\n    if (!this.value) {\n      throw new Error(`Cannot unpack value that is unset`);\n    }\n\n    return messageClass.deserializeBinary(this.value) as M;\n  }\n\n  /**\n   * Pack the given message into current Any instance\n   */\n  pack(msg: GrpcMessage) {\n    const { id } = msg.constructor as GrpcMessageClass<any>;\n\n    if (!id) {\n      throw new Error(`Message is invalid or does not have an id`);\n    }\n\n    this.typeUrl = `${Any.prefix}${id}`;\n    this.value = msg.serializeBinary();\n  }\n}\nexport module Any {\n  /**\n   * Standard JavaScript object representation for Any\n   */\n  export interface AsObject {\n    typeUrl: string;\n    value: Uint8Array;\n  }\n\n  /**\n   * Protobuf JSON representation for Any\n   */\n  export type AsProtobufJSON = {\n    '@type': string;\n    value?: string;\n    [prop: string]: any;\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class SourceContext implements GrpcMessage {\n  static id = 'google.protobuf.SourceContext';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SourceContext();\n    SourceContext.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SourceContext) {\n    _instance.fileName = _instance.fileName || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SourceContext,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.fileName = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SourceContext.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SourceContext,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.fileName) {\n      _writer.writeString(1, _instance.fileName);\n    }\n  }\n\n  private _fileName: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SourceContext to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SourceContext.AsObject>) {\n    _value = _value || {};\n    this.fileName = _value.fileName;\n    SourceContext.refineValues(this);\n  }\n  get fileName(): string {\n    return this._fileName;\n  }\n  set fileName(value: string) {\n    this._fileName = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SourceContext.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SourceContext.AsObject {\n    return {\n      fileName: this.fileName,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SourceContext.AsProtobufJSON {\n    return {\n      fileName: this.fileName,\n    };\n  }\n}\nexport module SourceContext {\n  /**\n   * Standard JavaScript object representation for SourceContext\n   */\n  export interface AsObject {\n    fileName: string;\n  }\n\n  /**\n   * Protobuf JSON representation for SourceContext\n   */\n  export interface AsProtobufJSON {\n    fileName: string;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '../../google/protobuf/any.pb';\nimport * as googleProtobuf001 from '../../google/protobuf/source-context.pb';\nexport enum Syntax {\n  SYNTAX_PROTO2 = 0,\n  SYNTAX_PROTO3 = 1,\n}\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Type implements GrpcMessage {\n  static id = 'google.protobuf.Type';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Type();\n    Type.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Type) {\n    _instance.name = _instance.name || '';\n    _instance.fields = _instance.fields || [];\n    _instance.oneofs = _instance.oneofs || [];\n    _instance.options = _instance.options || [];\n    _instance.sourceContext = _instance.sourceContext || undefined;\n    _instance.syntax = _instance.syntax || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Type, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.name = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Field();\n          _reader.readMessage(\n            messageInitializer2,\n            Field.deserializeBinaryFromReader\n          );\n          (_instance.fields = _instance.fields || []).push(messageInitializer2);\n          break;\n        case 3:\n          (_instance.oneofs = _instance.oneofs || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          const messageInitializer4 = new Option();\n          _reader.readMessage(\n            messageInitializer4,\n            Option.deserializeBinaryFromReader\n          );\n          (_instance.options = _instance.options || []).push(\n            messageInitializer4\n          );\n          break;\n        case 5:\n          _instance.sourceContext = new googleProtobuf001.SourceContext();\n          _reader.readMessage(\n            _instance.sourceContext,\n            googleProtobuf001.SourceContext.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.syntax = _reader.readEnum();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Type.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Type, _writer: BinaryWriter) {\n    if (_instance.name) {\n      _writer.writeString(1, _instance.name);\n    }\n    if (_instance.fields && _instance.fields.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.fields as any,\n        Field.serializeBinaryToWriter\n      );\n    }\n    if (_instance.oneofs && _instance.oneofs.length) {\n      _writer.writeRepeatedString(3, _instance.oneofs);\n    }\n    if (_instance.options && _instance.options.length) {\n      _writer.writeRepeatedMessage(\n        4,\n        _instance.options as any,\n        Option.serializeBinaryToWriter\n      );\n    }\n    if (_instance.sourceContext) {\n      _writer.writeMessage(\n        5,\n        _instance.sourceContext as any,\n        googleProtobuf001.SourceContext.serializeBinaryToWriter\n      );\n    }\n    if (_instance.syntax) {\n      _writer.writeEnum(6, _instance.syntax);\n    }\n  }\n\n  private _name: string;\n  private _fields?: Field[];\n  private _oneofs: string[];\n  private _options?: Option[];\n  private _sourceContext?: googleProtobuf001.SourceContext;\n  private _syntax: Syntax;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Type to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Type.AsObject>) {\n    _value = _value || {};\n    this.name = _value.name;\n    this.fields = (_value.fields || []).map((m) => new Field(m));\n    this.oneofs = (_value.oneofs || []).slice();\n    this.options = (_value.options || []).map((m) => new Option(m));\n    this.sourceContext = _value.sourceContext\n      ? new googleProtobuf001.SourceContext(_value.sourceContext)\n      : undefined;\n    this.syntax = _value.syntax;\n    Type.refineValues(this);\n  }\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  get fields(): Field[] | undefined {\n    return this._fields;\n  }\n  set fields(value: Field[] | undefined) {\n    this._fields = value;\n  }\n  get oneofs(): string[] {\n    return this._oneofs;\n  }\n  set oneofs(value: string[]) {\n    this._oneofs = value;\n  }\n  get options(): Option[] | undefined {\n    return this._options;\n  }\n  set options(value: Option[] | undefined) {\n    this._options = value;\n  }\n  get sourceContext(): googleProtobuf001.SourceContext | undefined {\n    return this._sourceContext;\n  }\n  set sourceContext(value: googleProtobuf001.SourceContext | undefined) {\n    this._sourceContext = value;\n  }\n  get syntax(): Syntax {\n    return this._syntax;\n  }\n  set syntax(value: Syntax) {\n    this._syntax = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Type.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Type.AsObject {\n    return {\n      name: this.name,\n      fields: (this.fields || []).map((m) => m.toObject()),\n      oneofs: (this.oneofs || []).slice(),\n      options: (this.options || []).map((m) => m.toObject()),\n      sourceContext: this.sourceContext\n        ? this.sourceContext.toObject()\n        : undefined,\n      syntax: this.syntax,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Type.AsProtobufJSON {\n    return {\n      name: this.name,\n      fields: (this.fields || []).map((m) => m.toProtobufJSON(options)),\n      oneofs: (this.oneofs || []).slice(),\n      options: (this.options || []).map((m) => m.toProtobufJSON(options)),\n      sourceContext: this.sourceContext\n        ? this.sourceContext.toProtobufJSON(options)\n        : null,\n      syntax:\n        Syntax[\n          this.syntax === null || this.syntax === undefined ? 0 : this.syntax\n        ],\n    };\n  }\n}\nexport module Type {\n  /**\n   * Standard JavaScript object representation for Type\n   */\n  export interface AsObject {\n    name: string;\n    fields?: Field.AsObject[];\n    oneofs: string[];\n    options?: Option.AsObject[];\n    sourceContext?: googleProtobuf001.SourceContext.AsObject;\n    syntax: Syntax;\n  }\n\n  /**\n   * Protobuf JSON representation for Type\n   */\n  export interface AsProtobufJSON {\n    name: string;\n    fields: Field.AsProtobufJSON[] | null;\n    oneofs: string[];\n    options: Option.AsProtobufJSON[] | null;\n    sourceContext: googleProtobuf001.SourceContext.AsProtobufJSON | null;\n    syntax: string;\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Field implements GrpcMessage {\n  static id = 'google.protobuf.Field';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Field();\n    Field.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Field) {\n    _instance.kind = _instance.kind || 0;\n    _instance.cardinality = _instance.cardinality || 0;\n    _instance.number = _instance.number || 0;\n    _instance.name = _instance.name || '';\n    _instance.typeUrl = _instance.typeUrl || '';\n    _instance.oneofIndex = _instance.oneofIndex || 0;\n    _instance.packed = _instance.packed || false;\n    _instance.options = _instance.options || [];\n    _instance.jsonName = _instance.jsonName || '';\n    _instance.defaultValue = _instance.defaultValue || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Field, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.kind = _reader.readEnum();\n          break;\n        case 2:\n          _instance.cardinality = _reader.readEnum();\n          break;\n        case 3:\n          _instance.number = _reader.readInt32();\n          break;\n        case 4:\n          _instance.name = _reader.readString();\n          break;\n        case 6:\n          _instance.typeUrl = _reader.readString();\n          break;\n        case 7:\n          _instance.oneofIndex = _reader.readInt32();\n          break;\n        case 8:\n          _instance.packed = _reader.readBool();\n          break;\n        case 9:\n          const messageInitializer9 = new Option();\n          _reader.readMessage(\n            messageInitializer9,\n            Option.deserializeBinaryFromReader\n          );\n          (_instance.options = _instance.options || []).push(\n            messageInitializer9\n          );\n          break;\n        case 10:\n          _instance.jsonName = _reader.readString();\n          break;\n        case 11:\n          _instance.defaultValue = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Field.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Field, _writer: BinaryWriter) {\n    if (_instance.kind) {\n      _writer.writeEnum(1, _instance.kind);\n    }\n    if (_instance.cardinality) {\n      _writer.writeEnum(2, _instance.cardinality);\n    }\n    if (_instance.number) {\n      _writer.writeInt32(3, _instance.number);\n    }\n    if (_instance.name) {\n      _writer.writeString(4, _instance.name);\n    }\n    if (_instance.typeUrl) {\n      _writer.writeString(6, _instance.typeUrl);\n    }\n    if (_instance.oneofIndex) {\n      _writer.writeInt32(7, _instance.oneofIndex);\n    }\n    if (_instance.packed) {\n      _writer.writeBool(8, _instance.packed);\n    }\n    if (_instance.options && _instance.options.length) {\n      _writer.writeRepeatedMessage(\n        9,\n        _instance.options as any,\n        Option.serializeBinaryToWriter\n      );\n    }\n    if (_instance.jsonName) {\n      _writer.writeString(10, _instance.jsonName);\n    }\n    if (_instance.defaultValue) {\n      _writer.writeString(11, _instance.defaultValue);\n    }\n  }\n\n  private _kind: Field.Kind;\n  private _cardinality: Field.Cardinality;\n  private _number: number;\n  private _name: string;\n  private _typeUrl: string;\n  private _oneofIndex: number;\n  private _packed: boolean;\n  private _options?: Option[];\n  private _jsonName: string;\n  private _defaultValue: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Field to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Field.AsObject>) {\n    _value = _value || {};\n    this.kind = _value.kind;\n    this.cardinality = _value.cardinality;\n    this.number = _value.number;\n    this.name = _value.name;\n    this.typeUrl = _value.typeUrl;\n    this.oneofIndex = _value.oneofIndex;\n    this.packed = _value.packed;\n    this.options = (_value.options || []).map((m) => new Option(m));\n    this.jsonName = _value.jsonName;\n    this.defaultValue = _value.defaultValue;\n    Field.refineValues(this);\n  }\n  get kind(): Field.Kind {\n    return this._kind;\n  }\n  set kind(value: Field.Kind) {\n    this._kind = value;\n  }\n  get cardinality(): Field.Cardinality {\n    return this._cardinality;\n  }\n  set cardinality(value: Field.Cardinality) {\n    this._cardinality = value;\n  }\n  get number(): number {\n    return this._number;\n  }\n  set number(value: number) {\n    this._number = value;\n  }\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  get typeUrl(): string {\n    return this._typeUrl;\n  }\n  set typeUrl(value: string) {\n    this._typeUrl = value;\n  }\n  get oneofIndex(): number {\n    return this._oneofIndex;\n  }\n  set oneofIndex(value: number) {\n    this._oneofIndex = value;\n  }\n  get packed(): boolean {\n    return this._packed;\n  }\n  set packed(value: boolean) {\n    this._packed = value;\n  }\n  get options(): Option[] | undefined {\n    return this._options;\n  }\n  set options(value: Option[] | undefined) {\n    this._options = value;\n  }\n  get jsonName(): string {\n    return this._jsonName;\n  }\n  set jsonName(value: string) {\n    this._jsonName = value;\n  }\n  get defaultValue(): string {\n    return this._defaultValue;\n  }\n  set defaultValue(value: string) {\n    this._defaultValue = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Field.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Field.AsObject {\n    return {\n      kind: this.kind,\n      cardinality: this.cardinality,\n      number: this.number,\n      name: this.name,\n      typeUrl: this.typeUrl,\n      oneofIndex: this.oneofIndex,\n      packed: this.packed,\n      options: (this.options || []).map((m) => m.toObject()),\n      jsonName: this.jsonName,\n      defaultValue: this.defaultValue,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Field.AsProtobufJSON {\n    return {\n      kind: Field.Kind[\n        this.kind === null || this.kind === undefined ? 0 : this.kind\n      ],\n      cardinality:\n        Field.Cardinality[\n          this.cardinality === null || this.cardinality === undefined\n            ? 0\n            : this.cardinality\n        ],\n      number: this.number,\n      name: this.name,\n      typeUrl: this.typeUrl,\n      oneofIndex: this.oneofIndex,\n      packed: this.packed,\n      options: (this.options || []).map((m) => m.toProtobufJSON(options)),\n      jsonName: this.jsonName,\n      defaultValue: this.defaultValue,\n    };\n  }\n}\nexport module Field {\n  /**\n   * Standard JavaScript object representation for Field\n   */\n  export interface AsObject {\n    kind: Field.Kind;\n    cardinality: Field.Cardinality;\n    number: number;\n    name: string;\n    typeUrl: string;\n    oneofIndex: number;\n    packed: boolean;\n    options?: Option.AsObject[];\n    jsonName: string;\n    defaultValue: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Field\n   */\n  export interface AsProtobufJSON {\n    kind: string;\n    cardinality: string;\n    number: number;\n    name: string;\n    typeUrl: string;\n    oneofIndex: number;\n    packed: boolean;\n    options: Option.AsProtobufJSON[] | null;\n    jsonName: string;\n    defaultValue: string;\n  }\n  export enum Kind {\n    TYPE_UNKNOWN = 0,\n    TYPE_DOUBLE = 1,\n    TYPE_FLOAT = 2,\n    TYPE_INT64 = 3,\n    TYPE_UINT64 = 4,\n    TYPE_INT32 = 5,\n    TYPE_FIXED64 = 6,\n    TYPE_FIXED32 = 7,\n    TYPE_BOOL = 8,\n    TYPE_STRING = 9,\n    TYPE_GROUP = 10,\n    TYPE_MESSAGE = 11,\n    TYPE_BYTES = 12,\n    TYPE_UINT32 = 13,\n    TYPE_ENUM = 14,\n    TYPE_SFIXED32 = 15,\n    TYPE_SFIXED64 = 16,\n    TYPE_SINT32 = 17,\n    TYPE_SINT64 = 18,\n  }\n  export enum Cardinality {\n    CARDINALITY_UNKNOWN = 0,\n    CARDINALITY_OPTIONAL = 1,\n    CARDINALITY_REQUIRED = 2,\n    CARDINALITY_REPEATED = 3,\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Enum implements GrpcMessage {\n  static id = 'google.protobuf.Enum';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Enum();\n    Enum.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Enum) {\n    _instance.name = _instance.name || '';\n    _instance.enumvalue = _instance.enumvalue || [];\n    _instance.options = _instance.options || [];\n    _instance.sourceContext = _instance.sourceContext || undefined;\n    _instance.syntax = _instance.syntax || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Enum, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.name = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new EnumValue();\n          _reader.readMessage(\n            messageInitializer2,\n            EnumValue.deserializeBinaryFromReader\n          );\n          (_instance.enumvalue = _instance.enumvalue || []).push(\n            messageInitializer2\n          );\n          break;\n        case 3:\n          const messageInitializer3 = new Option();\n          _reader.readMessage(\n            messageInitializer3,\n            Option.deserializeBinaryFromReader\n          );\n          (_instance.options = _instance.options || []).push(\n            messageInitializer3\n          );\n          break;\n        case 4:\n          _instance.sourceContext = new googleProtobuf001.SourceContext();\n          _reader.readMessage(\n            _instance.sourceContext,\n            googleProtobuf001.SourceContext.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.syntax = _reader.readEnum();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Enum.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Enum, _writer: BinaryWriter) {\n    if (_instance.name) {\n      _writer.writeString(1, _instance.name);\n    }\n    if (_instance.enumvalue && _instance.enumvalue.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.enumvalue as any,\n        EnumValue.serializeBinaryToWriter\n      );\n    }\n    if (_instance.options && _instance.options.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.options as any,\n        Option.serializeBinaryToWriter\n      );\n    }\n    if (_instance.sourceContext) {\n      _writer.writeMessage(\n        4,\n        _instance.sourceContext as any,\n        googleProtobuf001.SourceContext.serializeBinaryToWriter\n      );\n    }\n    if (_instance.syntax) {\n      _writer.writeEnum(5, _instance.syntax);\n    }\n  }\n\n  private _name: string;\n  private _enumvalue?: EnumValue[];\n  private _options?: Option[];\n  private _sourceContext?: googleProtobuf001.SourceContext;\n  private _syntax: Syntax;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Enum to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Enum.AsObject>) {\n    _value = _value || {};\n    this.name = _value.name;\n    this.enumvalue = (_value.enumvalue || []).map((m) => new EnumValue(m));\n    this.options = (_value.options || []).map((m) => new Option(m));\n    this.sourceContext = _value.sourceContext\n      ? new googleProtobuf001.SourceContext(_value.sourceContext)\n      : undefined;\n    this.syntax = _value.syntax;\n    Enum.refineValues(this);\n  }\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  get enumvalue(): EnumValue[] | undefined {\n    return this._enumvalue;\n  }\n  set enumvalue(value: EnumValue[] | undefined) {\n    this._enumvalue = value;\n  }\n  get options(): Option[] | undefined {\n    return this._options;\n  }\n  set options(value: Option[] | undefined) {\n    this._options = value;\n  }\n  get sourceContext(): googleProtobuf001.SourceContext | undefined {\n    return this._sourceContext;\n  }\n  set sourceContext(value: googleProtobuf001.SourceContext | undefined) {\n    this._sourceContext = value;\n  }\n  get syntax(): Syntax {\n    return this._syntax;\n  }\n  set syntax(value: Syntax) {\n    this._syntax = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Enum.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Enum.AsObject {\n    return {\n      name: this.name,\n      enumvalue: (this.enumvalue || []).map((m) => m.toObject()),\n      options: (this.options || []).map((m) => m.toObject()),\n      sourceContext: this.sourceContext\n        ? this.sourceContext.toObject()\n        : undefined,\n      syntax: this.syntax,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Enum.AsProtobufJSON {\n    return {\n      name: this.name,\n      enumvalue: (this.enumvalue || []).map((m) => m.toProtobufJSON(options)),\n      options: (this.options || []).map((m) => m.toProtobufJSON(options)),\n      sourceContext: this.sourceContext\n        ? this.sourceContext.toProtobufJSON(options)\n        : null,\n      syntax:\n        Syntax[\n          this.syntax === null || this.syntax === undefined ? 0 : this.syntax\n        ],\n    };\n  }\n}\nexport module Enum {\n  /**\n   * Standard JavaScript object representation for Enum\n   */\n  export interface AsObject {\n    name: string;\n    enumvalue?: EnumValue.AsObject[];\n    options?: Option.AsObject[];\n    sourceContext?: googleProtobuf001.SourceContext.AsObject;\n    syntax: Syntax;\n  }\n\n  /**\n   * Protobuf JSON representation for Enum\n   */\n  export interface AsProtobufJSON {\n    name: string;\n    enumvalue: EnumValue.AsProtobufJSON[] | null;\n    options: Option.AsProtobufJSON[] | null;\n    sourceContext: googleProtobuf001.SourceContext.AsProtobufJSON | null;\n    syntax: string;\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class EnumValue implements GrpcMessage {\n  static id = 'google.protobuf.EnumValue';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new EnumValue();\n    EnumValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: EnumValue) {\n    _instance.name = _instance.name || '';\n    _instance.number = _instance.number || 0;\n    _instance.options = _instance.options || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: EnumValue,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.name = _reader.readString();\n          break;\n        case 2:\n          _instance.number = _reader.readInt32();\n          break;\n        case 3:\n          const messageInitializer3 = new Option();\n          _reader.readMessage(\n            messageInitializer3,\n            Option.deserializeBinaryFromReader\n          );\n          (_instance.options = _instance.options || []).push(\n            messageInitializer3\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    EnumValue.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: EnumValue, _writer: BinaryWriter) {\n    if (_instance.name) {\n      _writer.writeString(1, _instance.name);\n    }\n    if (_instance.number) {\n      _writer.writeInt32(2, _instance.number);\n    }\n    if (_instance.options && _instance.options.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.options as any,\n        Option.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _name: string;\n  private _number: number;\n  private _options?: Option[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of EnumValue to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<EnumValue.AsObject>) {\n    _value = _value || {};\n    this.name = _value.name;\n    this.number = _value.number;\n    this.options = (_value.options || []).map((m) => new Option(m));\n    EnumValue.refineValues(this);\n  }\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  get number(): number {\n    return this._number;\n  }\n  set number(value: number) {\n    this._number = value;\n  }\n  get options(): Option[] | undefined {\n    return this._options;\n  }\n  set options(value: Option[] | undefined) {\n    this._options = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    EnumValue.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): EnumValue.AsObject {\n    return {\n      name: this.name,\n      number: this.number,\n      options: (this.options || []).map((m) => m.toObject()),\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): EnumValue.AsProtobufJSON {\n    return {\n      name: this.name,\n      number: this.number,\n      options: (this.options || []).map((m) => m.toProtobufJSON(options)),\n    };\n  }\n}\nexport module EnumValue {\n  /**\n   * Standard JavaScript object representation for EnumValue\n   */\n  export interface AsObject {\n    name: string;\n    number: number;\n    options?: Option.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for EnumValue\n   */\n  export interface AsProtobufJSON {\n    name: string;\n    number: number;\n    options: Option.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Option implements GrpcMessage {\n  static id = 'google.protobuf.Option';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Option();\n    Option.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Option) {\n    _instance.name = _instance.name || '';\n    _instance.value = _instance.value || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Option, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.name = _reader.readString();\n          break;\n        case 2:\n          _instance.value = new googleProtobuf000.Any();\n          _reader.readMessage(\n            _instance.value,\n            googleProtobuf000.Any.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Option.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Option, _writer: BinaryWriter) {\n    if (_instance.name) {\n      _writer.writeString(1, _instance.name);\n    }\n    if (_instance.value) {\n      _writer.writeMessage(\n        2,\n        _instance.value as any,\n        googleProtobuf000.Any.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _name: string;\n  private _value?: googleProtobuf000.Any;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Option to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Option.AsObject>) {\n    _value = _value || {};\n    this.name = _value.name;\n    this.value = _value.value\n      ? new googleProtobuf000.Any(_value.value)\n      : undefined;\n    Option.refineValues(this);\n  }\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  get value(): googleProtobuf000.Any | undefined {\n    return this._value;\n  }\n  set value(value: googleProtobuf000.Any | undefined) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Option.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Option.AsObject {\n    return {\n      name: this.name,\n      value: this.value ? this.value.toObject() : undefined,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Option.AsProtobufJSON {\n    return {\n      name: this.name,\n      value: this.value ? this.value.toProtobufJSON(options) : null,\n    };\n  }\n}\nexport module Option {\n  /**\n   * Standard JavaScript object representation for Option\n   */\n  export interface AsObject {\n    name: string;\n    value?: googleProtobuf000.Any.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Option\n   */\n  export interface AsProtobufJSON {\n    name: string;\n    value: googleProtobuf000.Any.AsProtobufJSON | null;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '../../google/protobuf/any.pb';\nimport * as googleProtobuf001 from '../../google/protobuf/source-context.pb';\nimport * as googleProtobuf002 from '../../google/protobuf/type.pb';\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Api implements GrpcMessage {\n  static id = 'google.protobuf.Api';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Api();\n    Api.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Api) {\n    _instance.name = _instance.name || '';\n    _instance.methods = _instance.methods || [];\n    _instance.options = _instance.options || [];\n    _instance.version = _instance.version || '';\n    _instance.sourceContext = _instance.sourceContext || undefined;\n    _instance.mixins = _instance.mixins || [];\n    _instance.syntax = _instance.syntax || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Api, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.name = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Method();\n          _reader.readMessage(\n            messageInitializer2,\n            Method.deserializeBinaryFromReader\n          );\n          (_instance.methods = _instance.methods || []).push(\n            messageInitializer2\n          );\n          break;\n        case 3:\n          const messageInitializer3 = new googleProtobuf002.Option();\n          _reader.readMessage(\n            messageInitializer3,\n            googleProtobuf002.Option.deserializeBinaryFromReader\n          );\n          (_instance.options = _instance.options || []).push(\n            messageInitializer3\n          );\n          break;\n        case 4:\n          _instance.version = _reader.readString();\n          break;\n        case 5:\n          _instance.sourceContext = new googleProtobuf001.SourceContext();\n          _reader.readMessage(\n            _instance.sourceContext,\n            googleProtobuf001.SourceContext.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          const messageInitializer6 = new Mixin();\n          _reader.readMessage(\n            messageInitializer6,\n            Mixin.deserializeBinaryFromReader\n          );\n          (_instance.mixins = _instance.mixins || []).push(messageInitializer6);\n          break;\n        case 7:\n          _instance.syntax = _reader.readEnum();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Api.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Api, _writer: BinaryWriter) {\n    if (_instance.name) {\n      _writer.writeString(1, _instance.name);\n    }\n    if (_instance.methods && _instance.methods.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.methods as any,\n        Method.serializeBinaryToWriter\n      );\n    }\n    if (_instance.options && _instance.options.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.options as any,\n        googleProtobuf002.Option.serializeBinaryToWriter\n      );\n    }\n    if (_instance.version) {\n      _writer.writeString(4, _instance.version);\n    }\n    if (_instance.sourceContext) {\n      _writer.writeMessage(\n        5,\n        _instance.sourceContext as any,\n        googleProtobuf001.SourceContext.serializeBinaryToWriter\n      );\n    }\n    if (_instance.mixins && _instance.mixins.length) {\n      _writer.writeRepeatedMessage(\n        6,\n        _instance.mixins as any,\n        Mixin.serializeBinaryToWriter\n      );\n    }\n    if (_instance.syntax) {\n      _writer.writeEnum(7, _instance.syntax);\n    }\n  }\n\n  private _name: string;\n  private _methods?: Method[];\n  private _options?: googleProtobuf002.Option[];\n  private _version: string;\n  private _sourceContext?: googleProtobuf001.SourceContext;\n  private _mixins?: Mixin[];\n  private _syntax: googleProtobuf002.Syntax;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Api to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Api.AsObject>) {\n    _value = _value || {};\n    this.name = _value.name;\n    this.methods = (_value.methods || []).map((m) => new Method(m));\n    this.options = (_value.options || []).map(\n      (m) => new googleProtobuf002.Option(m)\n    );\n    this.version = _value.version;\n    this.sourceContext = _value.sourceContext\n      ? new googleProtobuf001.SourceContext(_value.sourceContext)\n      : undefined;\n    this.mixins = (_value.mixins || []).map((m) => new Mixin(m));\n    this.syntax = _value.syntax;\n    Api.refineValues(this);\n  }\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  get methods(): Method[] | undefined {\n    return this._methods;\n  }\n  set methods(value: Method[] | undefined) {\n    this._methods = value;\n  }\n  get options(): googleProtobuf002.Option[] | undefined {\n    return this._options;\n  }\n  set options(value: googleProtobuf002.Option[] | undefined) {\n    this._options = value;\n  }\n  get version(): string {\n    return this._version;\n  }\n  set version(value: string) {\n    this._version = value;\n  }\n  get sourceContext(): googleProtobuf001.SourceContext | undefined {\n    return this._sourceContext;\n  }\n  set sourceContext(value: googleProtobuf001.SourceContext | undefined) {\n    this._sourceContext = value;\n  }\n  get mixins(): Mixin[] | undefined {\n    return this._mixins;\n  }\n  set mixins(value: Mixin[] | undefined) {\n    this._mixins = value;\n  }\n  get syntax(): googleProtobuf002.Syntax {\n    return this._syntax;\n  }\n  set syntax(value: googleProtobuf002.Syntax) {\n    this._syntax = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Api.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Api.AsObject {\n    return {\n      name: this.name,\n      methods: (this.methods || []).map((m) => m.toObject()),\n      options: (this.options || []).map((m) => m.toObject()),\n      version: this.version,\n      sourceContext: this.sourceContext\n        ? this.sourceContext.toObject()\n        : undefined,\n      mixins: (this.mixins || []).map((m) => m.toObject()),\n      syntax: this.syntax,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Api.AsProtobufJSON {\n    return {\n      name: this.name,\n      methods: (this.methods || []).map((m) => m.toProtobufJSON(options)),\n      options: (this.options || []).map((m) => m.toProtobufJSON(options)),\n      version: this.version,\n      sourceContext: this.sourceContext\n        ? this.sourceContext.toProtobufJSON(options)\n        : null,\n      mixins: (this.mixins || []).map((m) => m.toProtobufJSON(options)),\n      syntax:\n        googleProtobuf002.Syntax[\n          this.syntax === null || this.syntax === undefined ? 0 : this.syntax\n        ],\n    };\n  }\n}\nexport module Api {\n  /**\n   * Standard JavaScript object representation for Api\n   */\n  export interface AsObject {\n    name: string;\n    methods?: Method.AsObject[];\n    options?: googleProtobuf002.Option.AsObject[];\n    version: string;\n    sourceContext?: googleProtobuf001.SourceContext.AsObject;\n    mixins?: Mixin.AsObject[];\n    syntax: googleProtobuf002.Syntax;\n  }\n\n  /**\n   * Protobuf JSON representation for Api\n   */\n  export interface AsProtobufJSON {\n    name: string;\n    methods: Method.AsProtobufJSON[] | null;\n    options: googleProtobuf002.Option.AsProtobufJSON[] | null;\n    version: string;\n    sourceContext: googleProtobuf001.SourceContext.AsProtobufJSON | null;\n    mixins: Mixin.AsProtobufJSON[] | null;\n    syntax: string;\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Method implements GrpcMessage {\n  static id = 'google.protobuf.Method';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Method();\n    Method.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Method) {\n    _instance.name = _instance.name || '';\n    _instance.requestTypeUrl = _instance.requestTypeUrl || '';\n    _instance.requestStreaming = _instance.requestStreaming || false;\n    _instance.responseTypeUrl = _instance.responseTypeUrl || '';\n    _instance.responseStreaming = _instance.responseStreaming || false;\n    _instance.options = _instance.options || [];\n    _instance.syntax = _instance.syntax || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Method, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.name = _reader.readString();\n          break;\n        case 2:\n          _instance.requestTypeUrl = _reader.readString();\n          break;\n        case 3:\n          _instance.requestStreaming = _reader.readBool();\n          break;\n        case 4:\n          _instance.responseTypeUrl = _reader.readString();\n          break;\n        case 5:\n          _instance.responseStreaming = _reader.readBool();\n          break;\n        case 6:\n          const messageInitializer6 = new googleProtobuf002.Option();\n          _reader.readMessage(\n            messageInitializer6,\n            googleProtobuf002.Option.deserializeBinaryFromReader\n          );\n          (_instance.options = _instance.options || []).push(\n            messageInitializer6\n          );\n          break;\n        case 7:\n          _instance.syntax = _reader.readEnum();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Method.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Method, _writer: BinaryWriter) {\n    if (_instance.name) {\n      _writer.writeString(1, _instance.name);\n    }\n    if (_instance.requestTypeUrl) {\n      _writer.writeString(2, _instance.requestTypeUrl);\n    }\n    if (_instance.requestStreaming) {\n      _writer.writeBool(3, _instance.requestStreaming);\n    }\n    if (_instance.responseTypeUrl) {\n      _writer.writeString(4, _instance.responseTypeUrl);\n    }\n    if (_instance.responseStreaming) {\n      _writer.writeBool(5, _instance.responseStreaming);\n    }\n    if (_instance.options && _instance.options.length) {\n      _writer.writeRepeatedMessage(\n        6,\n        _instance.options as any,\n        googleProtobuf002.Option.serializeBinaryToWriter\n      );\n    }\n    if (_instance.syntax) {\n      _writer.writeEnum(7, _instance.syntax);\n    }\n  }\n\n  private _name: string;\n  private _requestTypeUrl: string;\n  private _requestStreaming: boolean;\n  private _responseTypeUrl: string;\n  private _responseStreaming: boolean;\n  private _options?: googleProtobuf002.Option[];\n  private _syntax: googleProtobuf002.Syntax;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Method to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Method.AsObject>) {\n    _value = _value || {};\n    this.name = _value.name;\n    this.requestTypeUrl = _value.requestTypeUrl;\n    this.requestStreaming = _value.requestStreaming;\n    this.responseTypeUrl = _value.responseTypeUrl;\n    this.responseStreaming = _value.responseStreaming;\n    this.options = (_value.options || []).map(\n      (m) => new googleProtobuf002.Option(m)\n    );\n    this.syntax = _value.syntax;\n    Method.refineValues(this);\n  }\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  get requestTypeUrl(): string {\n    return this._requestTypeUrl;\n  }\n  set requestTypeUrl(value: string) {\n    this._requestTypeUrl = value;\n  }\n  get requestStreaming(): boolean {\n    return this._requestStreaming;\n  }\n  set requestStreaming(value: boolean) {\n    this._requestStreaming = value;\n  }\n  get responseTypeUrl(): string {\n    return this._responseTypeUrl;\n  }\n  set responseTypeUrl(value: string) {\n    this._responseTypeUrl = value;\n  }\n  get responseStreaming(): boolean {\n    return this._responseStreaming;\n  }\n  set responseStreaming(value: boolean) {\n    this._responseStreaming = value;\n  }\n  get options(): googleProtobuf002.Option[] | undefined {\n    return this._options;\n  }\n  set options(value: googleProtobuf002.Option[] | undefined) {\n    this._options = value;\n  }\n  get syntax(): googleProtobuf002.Syntax {\n    return this._syntax;\n  }\n  set syntax(value: googleProtobuf002.Syntax) {\n    this._syntax = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Method.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Method.AsObject {\n    return {\n      name: this.name,\n      requestTypeUrl: this.requestTypeUrl,\n      requestStreaming: this.requestStreaming,\n      responseTypeUrl: this.responseTypeUrl,\n      responseStreaming: this.responseStreaming,\n      options: (this.options || []).map((m) => m.toObject()),\n      syntax: this.syntax,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Method.AsProtobufJSON {\n    return {\n      name: this.name,\n      requestTypeUrl: this.requestTypeUrl,\n      requestStreaming: this.requestStreaming,\n      responseTypeUrl: this.responseTypeUrl,\n      responseStreaming: this.responseStreaming,\n      options: (this.options || []).map((m) => m.toProtobufJSON(options)),\n      syntax:\n        googleProtobuf002.Syntax[\n          this.syntax === null || this.syntax === undefined ? 0 : this.syntax\n        ],\n    };\n  }\n}\nexport module Method {\n  /**\n   * Standard JavaScript object representation for Method\n   */\n  export interface AsObject {\n    name: string;\n    requestTypeUrl: string;\n    requestStreaming: boolean;\n    responseTypeUrl: string;\n    responseStreaming: boolean;\n    options?: googleProtobuf002.Option.AsObject[];\n    syntax: googleProtobuf002.Syntax;\n  }\n\n  /**\n   * Protobuf JSON representation for Method\n   */\n  export interface AsProtobufJSON {\n    name: string;\n    requestTypeUrl: string;\n    requestStreaming: boolean;\n    responseTypeUrl: string;\n    responseStreaming: boolean;\n    options: googleProtobuf002.Option.AsProtobufJSON[] | null;\n    syntax: string;\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Mixin implements GrpcMessage {\n  static id = 'google.protobuf.Mixin';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Mixin();\n    Mixin.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Mixin) {\n    _instance.name = _instance.name || '';\n    _instance.root = _instance.root || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Mixin, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.name = _reader.readString();\n          break;\n        case 2:\n          _instance.root = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Mixin.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Mixin, _writer: BinaryWriter) {\n    if (_instance.name) {\n      _writer.writeString(1, _instance.name);\n    }\n    if (_instance.root) {\n      _writer.writeString(2, _instance.root);\n    }\n  }\n\n  private _name: string;\n  private _root: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Mixin to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Mixin.AsObject>) {\n    _value = _value || {};\n    this.name = _value.name;\n    this.root = _value.root;\n    Mixin.refineValues(this);\n  }\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  get root(): string {\n    return this._root;\n  }\n  set root(value: string) {\n    this._root = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Mixin.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Mixin.AsObject {\n    return {\n      name: this.name,\n      root: this.root,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Mixin.AsProtobufJSON {\n    return {\n      name: this.name,\n      root: this.root,\n    };\n  }\n}\nexport module Mixin {\n  /**\n   * Standard JavaScript object representation for Mixin\n   */\n  export interface AsObject {\n    name: string;\n    root: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Mixin\n   */\n  export interface AsProtobufJSON {\n    name: string;\n    root: string;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Duration implements GrpcMessage {\n  static id = 'google.protobuf.Duration';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Duration();\n    Duration.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Duration) {\n    _instance.seconds = _instance.seconds || '0';\n    _instance.nanos = _instance.nanos || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Duration,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.seconds = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.nanos = _reader.readInt32();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Duration.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Duration, _writer: BinaryWriter) {\n    if (_instance.seconds) {\n      _writer.writeInt64String(1, _instance.seconds);\n    }\n    if (_instance.nanos) {\n      _writer.writeInt32(2, _instance.nanos);\n    }\n  }\n\n  private _seconds: string;\n  private _nanos: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Duration to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Duration.AsObject>) {\n    _value = _value || {};\n    this.seconds = _value.seconds;\n    this.nanos = _value.nanos;\n    Duration.refineValues(this);\n  }\n  get seconds(): string {\n    return this._seconds;\n  }\n  set seconds(value: string) {\n    this._seconds = value;\n  }\n  get nanos(): number {\n    return this._nanos;\n  }\n  set nanos(value: number) {\n    this._nanos = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Duration.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Duration.AsObject {\n    return {\n      seconds: this.seconds,\n      nanos: this.nanos,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Duration.AsProtobufJSON {\n    return parseInt(this.seconds || '0') + (this.nanos || 0) / 1e9 + 's';\n  }\n}\nexport module Duration {\n  /**\n   * Standard JavaScript object representation for Duration\n   */\n  export interface AsObject {\n    seconds: string;\n    nanos: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Duration\n   */\n  export type AsProtobufJSON = string;\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Empty implements GrpcMessage {\n  static id = 'google.protobuf.Empty';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Empty();\n    Empty.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Empty) {}\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Empty, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Empty.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Empty, _writer: BinaryWriter) {}\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Empty to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Empty.AsObject>) {\n    _value = _value || {};\n    Empty.refineValues(this);\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Empty.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Empty.AsObject {\n    return {};\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Empty.AsProtobufJSON {\n    return {};\n  }\n}\nexport module Empty {\n  /**\n   * Standard JavaScript object representation for Empty\n   */\n  export interface AsObject {}\n\n  /**\n   * Protobuf JSON representation for Empty\n   */\n  export interface AsProtobufJSON {}\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class FieldMask implements GrpcMessage {\n  static id = 'google.protobuf.FieldMask';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new FieldMask();\n    FieldMask.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: FieldMask) {\n    _instance.paths = _instance.paths || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: FieldMask,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.paths = _instance.paths || []).push(_reader.readString());\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    FieldMask.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: FieldMask, _writer: BinaryWriter) {\n    if (_instance.paths && _instance.paths.length) {\n      _writer.writeRepeatedString(1, _instance.paths);\n    }\n  }\n\n  private _paths: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of FieldMask to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<FieldMask.AsObject>) {\n    _value = _value || {};\n    this.paths = (_value.paths || []).slice();\n    FieldMask.refineValues(this);\n  }\n  get paths(): string[] {\n    return this._paths;\n  }\n  set paths(value: string[]) {\n    this._paths = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    FieldMask.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): FieldMask.AsObject {\n    return {\n      paths: (this.paths || []).slice(),\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): FieldMask.AsProtobufJSON {\n    return this.paths.join(',');\n  }\n}\nexport module FieldMask {\n  /**\n   * Standard JavaScript object representation for FieldMask\n   */\n  export interface AsObject {\n    paths: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for FieldMask\n   */\n  export type AsProtobufJSON = string;\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nexport enum NullValue {\n  NULL_VALUE = 0,\n}\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Struct implements GrpcMessage {\n  static id = 'google.protobuf.Struct';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Struct();\n    Struct.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Struct) {\n    _instance.fields = _instance.fields || {};\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Struct, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const msg_1 = {} as any;\n          _reader.readMessage(\n            msg_1,\n            Struct.FieldsEntry.deserializeBinaryFromReader\n          );\n          _instance.fields = _instance.fields || {};\n          _instance.fields[msg_1.key] = msg_1.value;\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Struct.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Struct, _writer: BinaryWriter) {\n    if (!!_instance.fields) {\n      const keys_1 = Object.keys(_instance.fields as any);\n\n      if (keys_1.length) {\n        const repeated_1 = keys_1\n          .map((key) => ({ key: key, value: (_instance.fields as any)[key] }))\n          .reduce((r, v) => [...r, v], [] as any[]);\n\n        _writer.writeRepeatedMessage(\n          1,\n          repeated_1,\n          Struct.FieldsEntry.serializeBinaryToWriter\n        );\n      }\n    }\n  }\n\n  private _fields: { [prop: string]: Value };\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Struct to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Struct.AsObject>) {\n    _value = _value || {};\n    (this.fields = _value!.fields\n      ? Object.keys(_value!.fields).reduce(\n          (r, k) => ({\n            ...r,\n            [k]: _value!.fields![k] ? new Value(_value!.fields![k]) : undefined,\n          }),\n          {}\n        )\n      : {}),\n      Struct.refineValues(this);\n  }\n  get fields(): { [prop: string]: Value } {\n    return this._fields;\n  }\n  set fields(value: { [prop: string]: Value }) {\n    this._fields = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Struct.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Struct.AsObject {\n    return {\n      fields: this.fields\n        ? Object.keys(this.fields).reduce(\n            (r, k) => ({\n              ...r,\n              [k]: this.fields![k] ? this.fields![k].toObject() : undefined,\n            }),\n            {}\n          )\n        : {},\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Struct.AsProtobufJSON {\n    return this.fields\n      ? Object.keys(this.fields).reduce(\n          (r, k) => ({\n            ...r,\n            [k]: this.fields![k] ? this.fields![k].toProtobufJSON(options) : {},\n          }),\n          {}\n        )\n      : {};\n  }\n}\nexport module Struct {\n  /**\n   * Standard JavaScript object representation for Struct\n   */\n  export interface AsObject {\n    fields: { [prop: string]: Value };\n  }\n\n  /**\n   * Protobuf JSON representation for Struct\n   */\n  export type AsProtobufJSON = { [prop: string]: Value.AsProtobufJSON };\n\n  /**\n   * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n   */\n  export class FieldsEntry implements GrpcMessage {\n    static id = 'google.protobuf.Struct.FieldsEntry';\n\n    /**\n     * Deserialize binary data to message\n     * @param instance message instance\n     */\n    static deserializeBinary(bytes: ByteSource) {\n      const instance = new FieldsEntry();\n      FieldsEntry.deserializeBinaryFromReader(\n        instance,\n        new BinaryReader(bytes)\n      );\n      return instance;\n    }\n\n    /**\n     * Check all the properties and set default protobuf values if necessary\n     * @param _instance message instance\n     */\n    static refineValues(_instance: FieldsEntry) {\n      _instance.key = _instance.key || '';\n      _instance.value = _instance.value || undefined;\n    }\n\n    /**\n     * Deserializes / reads binary message into message instance using provided binary reader\n     * @param _instance message instance\n     * @param _reader binary reader instance\n     */\n    static deserializeBinaryFromReader(\n      _instance: FieldsEntry,\n      _reader: BinaryReader\n    ) {\n      while (_reader.nextField()) {\n        if (_reader.isEndGroup()) break;\n\n        switch (_reader.getFieldNumber()) {\n          case 1:\n            _instance.key = _reader.readString();\n            break;\n          case 2:\n            _instance.value = new Value();\n            _reader.readMessage(\n              _instance.value,\n              Value.deserializeBinaryFromReader\n            );\n            break;\n          default:\n            _reader.skipField();\n        }\n      }\n\n      FieldsEntry.refineValues(_instance);\n    }\n\n    /**\n     * Serializes a message to binary format using provided binary reader\n     * @param _instance message instance\n     * @param _writer binary writer instance\n     */\n    static serializeBinaryToWriter(\n      _instance: FieldsEntry,\n      _writer: BinaryWriter\n    ) {\n      if (_instance.key) {\n        _writer.writeString(1, _instance.key);\n      }\n      if (_instance.value) {\n        _writer.writeMessage(\n          2,\n          _instance.value as any,\n          Value.serializeBinaryToWriter\n        );\n      }\n    }\n\n    private _key: string;\n    private _value?: Value;\n\n    /**\n     * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n     * @param _value initial values object or instance of FieldsEntry to deeply clone from\n     */\n    constructor(_value?: RecursivePartial<FieldsEntry.AsObject>) {\n      _value = _value || {};\n      this.key = _value.key;\n      this.value = _value.value ? new Value(_value.value) : undefined;\n      FieldsEntry.refineValues(this);\n    }\n    get key(): string {\n      return this._key;\n    }\n    set key(value: string) {\n      this._key = value;\n    }\n    get value(): Value | undefined {\n      return this._value;\n    }\n    set value(value: Value | undefined) {\n      this._value = value;\n    }\n\n    /**\n     * Serialize message to binary data\n     * @param instance message instance\n     */\n    serializeBinary() {\n      const writer = new BinaryWriter();\n      FieldsEntry.serializeBinaryToWriter(this, writer);\n      return writer.getResultBuffer();\n    }\n\n    /**\n     * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n     */\n    toObject(): FieldsEntry.AsObject {\n      return {\n        key: this.key,\n        value: this.value ? this.value.toObject() : undefined,\n      };\n    }\n\n    /**\n     * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n     */\n    toJSON() {\n      return this.toObject();\n    }\n\n    /**\n     * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n     * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n     * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n     */\n    toProtobufJSON(\n      // @ts-ignore\n      options?: ToProtobufJSONOptions\n    ): FieldsEntry.AsProtobufJSON {\n      return {\n        key: this.key,\n        value: this.value ? this.value.toProtobufJSON(options) : null,\n      };\n    }\n  }\n  export module FieldsEntry {\n    /**\n     * Standard JavaScript object representation for FieldsEntry\n     */\n    export interface AsObject {\n      key: string;\n      value?: Value.AsObject;\n    }\n\n    /**\n     * Protobuf JSON representation for FieldsEntry\n     */\n    export interface AsProtobufJSON {\n      key: string;\n      value: Value.AsProtobufJSON | null;\n    }\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Value implements GrpcMessage {\n  static id = 'google.protobuf.Value';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Value();\n    Value.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Value) {}\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Value, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.nullValue = _reader.readEnum();\n          break;\n        case 2:\n          _instance.numberValue = _reader.readDouble();\n          break;\n        case 3:\n          _instance.stringValue = _reader.readString();\n          break;\n        case 4:\n          _instance.boolValue = _reader.readBool();\n          break;\n        case 5:\n          _instance.structValue = new Struct();\n          _reader.readMessage(\n            _instance.structValue,\n            Struct.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.listValue = new ListValue();\n          _reader.readMessage(\n            _instance.listValue,\n            ListValue.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Value.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Value, _writer: BinaryWriter) {\n    if (_instance.nullValue || _instance.nullValue === 0) {\n      _writer.writeEnum(1, _instance.nullValue);\n    }\n    if (_instance.numberValue || _instance.numberValue === 0) {\n      _writer.writeDouble(2, _instance.numberValue);\n    }\n    if (_instance.stringValue || _instance.stringValue === '') {\n      _writer.writeString(3, _instance.stringValue);\n    }\n    if (_instance.boolValue || _instance.boolValue === false) {\n      _writer.writeBool(4, _instance.boolValue);\n    }\n    if (_instance.structValue) {\n      _writer.writeMessage(\n        5,\n        _instance.structValue as any,\n        Struct.serializeBinaryToWriter\n      );\n    }\n    if (_instance.listValue) {\n      _writer.writeMessage(\n        6,\n        _instance.listValue as any,\n        ListValue.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _nullValue: NullValue;\n  private _numberValue: number;\n  private _stringValue: string;\n  private _boolValue: boolean;\n  private _structValue?: Struct;\n  private _listValue?: ListValue;\n\n  private _kind: Value.KindCase = Value.KindCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Value to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Value.AsObject>) {\n    _value = _value || {};\n    this.nullValue = _value.nullValue;\n    this.numberValue = _value.numberValue;\n    this.stringValue = _value.stringValue;\n    this.boolValue = _value.boolValue;\n    this.structValue = _value.structValue\n      ? new Struct(_value.structValue)\n      : undefined;\n    this.listValue = _value.listValue\n      ? new ListValue(_value.listValue)\n      : undefined;\n    Value.refineValues(this);\n  }\n  get nullValue(): NullValue {\n    return this._nullValue;\n  }\n  set nullValue(value: NullValue) {\n    if (value !== undefined && value !== null) {\n      this._numberValue =\n        this._stringValue =\n        this._boolValue =\n        this._structValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.nullValue;\n    }\n    this._nullValue = value;\n  }\n  get numberValue(): number {\n    return this._numberValue;\n  }\n  set numberValue(value: number) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._stringValue =\n        this._boolValue =\n        this._structValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.numberValue;\n    }\n    this._numberValue = value;\n  }\n  get stringValue(): string {\n    return this._stringValue;\n  }\n  set stringValue(value: string) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._numberValue =\n        this._boolValue =\n        this._structValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.stringValue;\n    }\n    this._stringValue = value;\n  }\n  get boolValue(): boolean {\n    return this._boolValue;\n  }\n  set boolValue(value: boolean) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._numberValue =\n        this._stringValue =\n        this._structValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.boolValue;\n    }\n    this._boolValue = value;\n  }\n  get structValue(): Struct | undefined {\n    return this._structValue;\n  }\n  set structValue(value: Struct | undefined) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._numberValue =\n        this._stringValue =\n        this._boolValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.structValue;\n    }\n    this._structValue = value;\n  }\n  get listValue(): ListValue | undefined {\n    return this._listValue;\n  }\n  set listValue(value: ListValue | undefined) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._numberValue =\n        this._stringValue =\n        this._boolValue =\n        this._structValue =\n          undefined;\n      this._kind = Value.KindCase.listValue;\n    }\n    this._listValue = value;\n  }\n  get kind() {\n    return this._kind;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Value.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Value.AsObject {\n    return {\n      nullValue: this.nullValue,\n      numberValue: this.numberValue,\n      stringValue: this.stringValue,\n      boolValue: this.boolValue,\n      structValue: this.structValue ? this.structValue.toObject() : undefined,\n      listValue: this.listValue ? this.listValue.toObject() : undefined,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Value.AsProtobufJSON {\n    switch (this.kind) {\n      case Value.KindCase.nullValue:\n        return null;\n      case Value.KindCase.numberValue:\n        return this.numberValue!;\n      case Value.KindCase.stringValue:\n        return this.stringValue!;\n      case Value.KindCase.boolValue:\n        return this.boolValue!;\n      case Value.KindCase.structValue:\n        return this.structValue\n          ? this.structValue.toProtobufJSON(options)\n          : null;\n      case Value.KindCase.listValue:\n        return this.listValue ? this.listValue.toProtobufJSON(options) : null;\n      default:\n        return null; // yes, according to standard should throw error, but no, it's not going to happen here\n    }\n  }\n}\nexport module Value {\n  /**\n   * Standard JavaScript object representation for Value\n   */\n  export interface AsObject {\n    nullValue: NullValue;\n    numberValue: number;\n    stringValue: string;\n    boolValue: boolean;\n    structValue?: Struct.AsObject;\n    listValue?: ListValue.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Value\n   */\n  export type AsProtobufJSON =\n    | null\n    | string\n    | number\n    | boolean\n    | Struct.AsProtobufJSON\n    | Value.AsProtobufJSON[];\n  export enum KindCase {\n    none = 0,\n    nullValue = 1,\n    numberValue = 2,\n    stringValue = 3,\n    boolValue = 4,\n    structValue = 5,\n    listValue = 6,\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class ListValue implements GrpcMessage {\n  static id = 'google.protobuf.ListValue';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListValue();\n    ListValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListValue) {\n    _instance.values = _instance.values || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListValue,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Value();\n          _reader.readMessage(\n            messageInitializer1,\n            Value.deserializeBinaryFromReader\n          );\n          (_instance.values = _instance.values || []).push(messageInitializer1);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListValue.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: ListValue, _writer: BinaryWriter) {\n    if (_instance.values && _instance.values.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.values as any,\n        Value.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _values?: Value[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListValue to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListValue.AsObject>) {\n    _value = _value || {};\n    this.values = (_value.values || []).map((m) => new Value(m));\n    ListValue.refineValues(this);\n  }\n  get values(): Value[] | undefined {\n    return this._values;\n  }\n  set values(value: Value[] | undefined) {\n    this._values = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListValue.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListValue.AsObject {\n    return {\n      values: (this.values || []).map((m) => m.toObject()),\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListValue.AsProtobufJSON {\n    return (this.values || []).map((v) =>\n      v ? v.toProtobufJSON(options) : null\n    );\n  }\n}\nexport module ListValue {\n  /**\n   * Standard JavaScript object representation for ListValue\n   */\n  export interface AsObject {\n    values?: Value.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListValue\n   */\n  export type AsProtobufJSON = Value.AsProtobufJSON[];\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Timestamp implements GrpcMessage {\n  static id = 'google.protobuf.Timestamp';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Timestamp();\n    Timestamp.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static fromDate(date: Date) {\n    const timestamp = new Timestamp();\n\n    timestamp.fromDate(date);\n\n    return timestamp;\n  }\n\n  static fromISOString(isoDate: string) {\n    const timestamp = new Timestamp();\n\n    timestamp.fromISOString(isoDate);\n\n    return timestamp;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Timestamp) {\n    _instance.seconds = _instance.seconds || '0';\n    _instance.nanos = _instance.nanos || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Timestamp,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.seconds = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.nanos = _reader.readInt32();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Timestamp.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Timestamp, _writer: BinaryWriter) {\n    if (_instance.seconds) {\n      _writer.writeInt64String(1, _instance.seconds);\n    }\n    if (_instance.nanos) {\n      _writer.writeInt32(2, _instance.nanos);\n    }\n  }\n\n  private _seconds: string;\n  private _nanos: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Timestamp to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Timestamp.AsObject>) {\n    _value = _value || {};\n    this.seconds = _value.seconds;\n    this.nanos = _value.nanos;\n    Timestamp.refineValues(this);\n  }\n  get seconds(): string {\n    return this._seconds;\n  }\n  set seconds(value: string) {\n    this._seconds = value;\n  }\n  get nanos(): number {\n    return this._nanos;\n  }\n  set nanos(value: number) {\n    this._nanos = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Timestamp.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Timestamp.AsObject {\n    return {\n      seconds: this.seconds,\n      nanos: this.nanos,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Timestamp.AsProtobufJSON {\n    return this.toISOString();\n  }\n\n  fromDate(date: Date) {\n    this.seconds = '' + Math.floor(date.getTime() / 1e3);\n    this.nanos = date.getMilliseconds() * 1e6;\n  }\n\n  toDate() {\n    return new Date(\n      parseInt(this.seconds || '0') * 1e3 + (this.nanos || 0) / 1e6\n    );\n  }\n\n  fromISOString(isoDate: string) {\n    this.fromDate(new Date(isoDate));\n  }\n\n  toISOString() {\n    return this.toDate().toISOString();\n  }\n}\nexport module Timestamp {\n  /**\n   * Standard JavaScript object representation for Timestamp\n   */\n  export interface AsObject {\n    seconds: string;\n    nanos: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Timestamp\n   */\n  export type AsProtobufJSON = string;\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n  uint8ArrayToBase64,\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class DoubleValue implements GrpcMessage {\n  static id = 'google.protobuf.DoubleValue';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new DoubleValue();\n    DoubleValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: DoubleValue) {\n    _instance.value = _instance.value || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: DoubleValue,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.value = _reader.readDouble();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    DoubleValue.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: DoubleValue,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.value) {\n      _writer.writeDouble(1, _instance.value);\n    }\n  }\n\n  private _value: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of DoubleValue to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<DoubleValue.AsObject>) {\n    _value = _value || {};\n    this.value = _value.value;\n    DoubleValue.refineValues(this);\n  }\n  get value(): number {\n    return this._value;\n  }\n  set value(value: number) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    DoubleValue.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): DoubleValue.AsObject {\n    return {\n      value: this.value,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): DoubleValue.AsProtobufJSON {\n    return this.value;\n  }\n}\nexport module DoubleValue {\n  /**\n   * Standard JavaScript object representation for DoubleValue\n   */\n  export interface AsObject {\n    value: number;\n  }\n\n  /**\n   * Protobuf JSON representation for DoubleValue\n   */\n  export type AsProtobufJSON = number;\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class FloatValue implements GrpcMessage {\n  static id = 'google.protobuf.FloatValue';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new FloatValue();\n    FloatValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: FloatValue) {\n    _instance.value = _instance.value || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: FloatValue,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.value = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    FloatValue.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: FloatValue, _writer: BinaryWriter) {\n    if (_instance.value) {\n      _writer.writeFloat(1, _instance.value);\n    }\n  }\n\n  private _value: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of FloatValue to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<FloatValue.AsObject>) {\n    _value = _value || {};\n    this.value = _value.value;\n    FloatValue.refineValues(this);\n  }\n  get value(): number {\n    return this._value;\n  }\n  set value(value: number) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    FloatValue.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): FloatValue.AsObject {\n    return {\n      value: this.value,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): FloatValue.AsProtobufJSON {\n    return this.value;\n  }\n}\nexport module FloatValue {\n  /**\n   * Standard JavaScript object representation for FloatValue\n   */\n  export interface AsObject {\n    value: number;\n  }\n\n  /**\n   * Protobuf JSON representation for FloatValue\n   */\n  export type AsProtobufJSON = number;\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Int64Value implements GrpcMessage {\n  static id = 'google.protobuf.Int64Value';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Int64Value();\n    Int64Value.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Int64Value) {\n    _instance.value = _instance.value || '0';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Int64Value,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.value = _reader.readInt64String();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Int64Value.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Int64Value, _writer: BinaryWriter) {\n    if (_instance.value) {\n      _writer.writeInt64String(1, _instance.value);\n    }\n  }\n\n  private _value: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Int64Value to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Int64Value.AsObject>) {\n    _value = _value || {};\n    this.value = _value.value;\n    Int64Value.refineValues(this);\n  }\n  get value(): string {\n    return this._value;\n  }\n  set value(value: string) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Int64Value.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Int64Value.AsObject {\n    return {\n      value: this.value,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Int64Value.AsProtobufJSON {\n    return this.value;\n  }\n}\nexport module Int64Value {\n  /**\n   * Standard JavaScript object representation for Int64Value\n   */\n  export interface AsObject {\n    value: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Int64Value\n   */\n  export type AsProtobufJSON = string;\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class UInt64Value implements GrpcMessage {\n  static id = 'google.protobuf.UInt64Value';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new UInt64Value();\n    UInt64Value.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: UInt64Value) {\n    _instance.value = _instance.value || '0';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: UInt64Value,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.value = _reader.readUint64String();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    UInt64Value.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: UInt64Value,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.value) {\n      _writer.writeUint64String(1, _instance.value);\n    }\n  }\n\n  private _value: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of UInt64Value to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<UInt64Value.AsObject>) {\n    _value = _value || {};\n    this.value = _value.value;\n    UInt64Value.refineValues(this);\n  }\n  get value(): string {\n    return this._value;\n  }\n  set value(value: string) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    UInt64Value.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): UInt64Value.AsObject {\n    return {\n      value: this.value,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): UInt64Value.AsProtobufJSON {\n    return this.value;\n  }\n}\nexport module UInt64Value {\n  /**\n   * Standard JavaScript object representation for UInt64Value\n   */\n  export interface AsObject {\n    value: string;\n  }\n\n  /**\n   * Protobuf JSON representation for UInt64Value\n   */\n  export type AsProtobufJSON = string;\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Int32Value implements GrpcMessage {\n  static id = 'google.protobuf.Int32Value';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Int32Value();\n    Int32Value.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Int32Value) {\n    _instance.value = _instance.value || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Int32Value,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.value = _reader.readInt32();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Int32Value.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Int32Value, _writer: BinaryWriter) {\n    if (_instance.value) {\n      _writer.writeInt32(1, _instance.value);\n    }\n  }\n\n  private _value: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Int32Value to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Int32Value.AsObject>) {\n    _value = _value || {};\n    this.value = _value.value;\n    Int32Value.refineValues(this);\n  }\n  get value(): number {\n    return this._value;\n  }\n  set value(value: number) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Int32Value.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Int32Value.AsObject {\n    return {\n      value: this.value,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Int32Value.AsProtobufJSON {\n    return this.value;\n  }\n}\nexport module Int32Value {\n  /**\n   * Standard JavaScript object representation for Int32Value\n   */\n  export interface AsObject {\n    value: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Int32Value\n   */\n  export type AsProtobufJSON = number;\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class UInt32Value implements GrpcMessage {\n  static id = 'google.protobuf.UInt32Value';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new UInt32Value();\n    UInt32Value.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: UInt32Value) {\n    _instance.value = _instance.value || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: UInt32Value,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.value = _reader.readUint32();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    UInt32Value.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: UInt32Value,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.value) {\n      _writer.writeUint32(1, _instance.value);\n    }\n  }\n\n  private _value: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of UInt32Value to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<UInt32Value.AsObject>) {\n    _value = _value || {};\n    this.value = _value.value;\n    UInt32Value.refineValues(this);\n  }\n  get value(): number {\n    return this._value;\n  }\n  set value(value: number) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    UInt32Value.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): UInt32Value.AsObject {\n    return {\n      value: this.value,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): UInt32Value.AsProtobufJSON {\n    return this.value;\n  }\n}\nexport module UInt32Value {\n  /**\n   * Standard JavaScript object representation for UInt32Value\n   */\n  export interface AsObject {\n    value: number;\n  }\n\n  /**\n   * Protobuf JSON representation for UInt32Value\n   */\n  export type AsProtobufJSON = number;\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class BoolValue implements GrpcMessage {\n  static id = 'google.protobuf.BoolValue';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new BoolValue();\n    BoolValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: BoolValue) {\n    _instance.value = _instance.value || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: BoolValue,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.value = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    BoolValue.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: BoolValue, _writer: BinaryWriter) {\n    if (_instance.value) {\n      _writer.writeBool(1, _instance.value);\n    }\n  }\n\n  private _value: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of BoolValue to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<BoolValue.AsObject>) {\n    _value = _value || {};\n    this.value = _value.value;\n    BoolValue.refineValues(this);\n  }\n  get value(): boolean {\n    return this._value;\n  }\n  set value(value: boolean) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    BoolValue.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): BoolValue.AsObject {\n    return {\n      value: this.value,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): BoolValue.AsProtobufJSON {\n    return this.value;\n  }\n}\nexport module BoolValue {\n  /**\n   * Standard JavaScript object representation for BoolValue\n   */\n  export interface AsObject {\n    value: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for BoolValue\n   */\n  export type AsProtobufJSON = boolean;\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class StringValue implements GrpcMessage {\n  static id = 'google.protobuf.StringValue';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new StringValue();\n    StringValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: StringValue) {\n    _instance.value = _instance.value || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: StringValue,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.value = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    StringValue.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: StringValue,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.value) {\n      _writer.writeString(1, _instance.value);\n    }\n  }\n\n  private _value: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of StringValue to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<StringValue.AsObject>) {\n    _value = _value || {};\n    this.value = _value.value;\n    StringValue.refineValues(this);\n  }\n  get value(): string {\n    return this._value;\n  }\n  set value(value: string) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    StringValue.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): StringValue.AsObject {\n    return {\n      value: this.value,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): StringValue.AsProtobufJSON {\n    return this.value;\n  }\n}\nexport module StringValue {\n  /**\n   * Standard JavaScript object representation for StringValue\n   */\n  export interface AsObject {\n    value: string;\n  }\n\n  /**\n   * Protobuf JSON representation for StringValue\n   */\n  export type AsProtobufJSON = string;\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class BytesValue implements GrpcMessage {\n  static id = 'google.protobuf.BytesValue';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new BytesValue();\n    BytesValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: BytesValue) {\n    _instance.value = _instance.value || new Uint8Array();\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: BytesValue,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.value = _reader.readBytes();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    BytesValue.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: BytesValue, _writer: BinaryWriter) {\n    if (_instance.value && _instance.value.length) {\n      _writer.writeBytes(1, _instance.value);\n    }\n  }\n\n  private _value: Uint8Array;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of BytesValue to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<BytesValue.AsObject>) {\n    _value = _value || {};\n    this.value = _value.value;\n    BytesValue.refineValues(this);\n  }\n  get value(): Uint8Array {\n    return this._value;\n  }\n  set value(value: Uint8Array) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    BytesValue.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): BytesValue.AsObject {\n    return {\n      value: this.value ? this.value.subarray(0) : new Uint8Array(),\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): BytesValue.AsProtobufJSON {\n    return this.value ? uint8ArrayToBase64(this.value) : '';\n  }\n}\nexport module BytesValue {\n  /**\n   * Standard JavaScript object representation for BytesValue\n   */\n  export interface AsObject {\n    value: Uint8Array;\n  }\n\n  /**\n   * Protobuf JSON representation for BytesValue\n   */\n  export type AsProtobufJSON = string;\n}\n","/*\n * Public API Surface of well-known-types\n */\n\nexport * from './lib/google/protobuf/any.pb';\nexport * from './lib/google/protobuf/api.pb';\nexport * from './lib/google/protobuf/duration.pb';\nexport * from './lib/google/protobuf/empty.pb';\nexport * from './lib/google/protobuf/field-mask.pb';\nexport * from './lib/google/protobuf/source-context.pb';\nexport * from './lib/google/protobuf/struct.pb';\nexport * from './lib/google/protobuf/timestamp.pb';\nexport * from './lib/google/protobuf/type.pb';\nexport * from './lib/google/protobuf/wrappers.pb';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["googleProtobuf001.SourceContext","googleProtobuf000.Any","googleProtobuf002.Option","googleProtobuf002.Syntax"],"mappings":";;;AAeA;;;MAGa,GAAG;;;;;IAgFd,YAAY,MAAuC;QACjD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KACxB;;;;;IA9ED,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,GAAG,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACnE,OAAO,QAAQ,CAAC;KACjB;;;;IAOD,OAAO,IAAI,CAAC,GAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;QAEtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEd,OAAO,GAAG,CAAC;KACZ;;;;;IAMD,OAAO,YAAY,CAAC,SAAc;QAChC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;QAC5C,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,IAAI,UAAU,EAAE,CAAC;KACvD;;;;;;IAOD,OAAO,2BAA2B,CAAC,SAAc,EAAE,OAAqB;QACtE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACzC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC7B;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAc,EAAE,OAAqB;QAClE,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7C,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACxC;KACF;IAeD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAiB;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,GAAG,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,EAAE;SAC9D,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,IAAI,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,CAAA,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;SACjE;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAE7C,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAQ,EAAE,CAAC;SACnC;QAED,MAAM,IAAI,GAAG,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAEzC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SAChD;QAED,uCAAY,IAAI,KAAE,OAAO,EAAE,IAAI,CAAC,OAAQ,IAAG;KAC5C;;;;;IAMD,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,gCAAgC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;SAC/D;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC/C;;;;;;IAOD,oBAAoB,CAClB,WAA4B,EAC5B,qBAAqB,GAAG,IAAI;QAE5B,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAErC,IAAI,CAAC,EAAE,EAAE;YACP,OAAO,IAAI,CAAC;SACb;QAED,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAErC,IAAI,CAAC,QAAQ,EAAE;YACb,IAAI,qBAAqB,EAAE;gBACzB,MAAM,IAAI,KAAK,CACb,4BAA4B,IAAI,CAAC,OAAO,kCAAkC,CAC3E,CAAC;aACH;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAED,OAAO,QAAQ,CAAC;KACjB;;;;;;IAOD,MAAM,CAAwB,WAA4B;QACxD,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAE5D,IAAI,CAAC,YAAY,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACpD;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QAED,OAAO,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAM,CAAC;KACxD;;;;IAKD,IAAI,CAAC,GAAgB;QACnB,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,WAAoC,CAAC;QAExD,IAAI,CAAC,EAAE,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;SAC9D;QAED,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,eAAe,EAAE,CAAC;KACpC;;AAtOM,MAAE,GAAG,qBAAqB,CAAC;AAYnB,UAAM,GAAG,sBAAsB;;AClBhD;;;MAGa,aAAa;;;;;IAoExB,YAAY,MAAiD;QAC3D,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAClC;;;;;IAjED,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;QACrC,aAAa,CAAC,2BAA2B,CACvC,QAAQ,EACR,IAAI,YAAY,CAAC,KAAK,CAAC,CACxB,CAAC;QACF,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAwB;QAC1C,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,IAAI,EAAE,CAAC;KAC/C;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAwB,EACxB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,QAAQ,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBAC1C,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACvC;;;;;;IAOD,OAAO,uBAAuB,CAC5B,SAAwB,EACxB,OAAqB;QAErB,IAAI,SAAS,CAAC,QAAQ,EAAE;YACtB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC5C;KACF;IAaD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,KAAa;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,aAAa,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACpD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO;YACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;KACH;;AArHM,gBAAE,GAAG,+BAA+B;;ICHjC;AAAZ,WAAY,MAAM;IAChB,qDAAiB,CAAA;IACjB,qDAAiB,CAAA;AACnB,CAAC,EAHW,MAAM,KAAN,MAAM,QAGjB;AACD;;;MAGa,IAAI;;;;;IAiIf,YAAY,MAAwC;QAClD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa;cACrC,IAAIA,aAA+B,CAAC,MAAM,CAAC,aAAa,CAAC;cACzD,SAAS,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KACzB;;;;;IArID,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACpE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAe;QACjC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;QACtC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;QAC1C,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;QAC1C,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;QAC5C,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC;QAC/D,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;KAC1C;;;;;;IAOD,OAAO,2BAA2B,CAAC,SAAe,EAAE,OAAqB;QACvE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACtC,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAI,KAAK,EAAE,CAAC;oBACxC,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnB,KAAK,CAAC,2BAA2B,CAClC,CAAC;oBACF,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBACtE,MAAM;gBACR,KAAK,CAAC;oBACJ,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,EAAE,IAAI,CAC9C,OAAO,CAAC,UAAU,EAAE,CACrB,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAI,MAAM,EAAE,CAAC;oBACzC,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnB,MAAM,CAAC,2BAA2B,CACnC,CAAC;oBACF,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,CAChD,mBAAmB,CACpB,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,aAAa,GAAG,IAAIA,aAA+B,EAAE,CAAC;oBAChE,OAAO,CAAC,WAAW,CACjB,SAAS,CAAC,aAAa,EACvBA,aAA+B,CAAC,2BAA2B,CAC5D,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC9B;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAe,EAAE,OAAqB;QACnE,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;YAC/C,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,MAAa,EACvB,KAAK,CAAC,uBAAuB,CAC9B,CAAC;SACH;QACD,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;YAC/C,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;SAClD;QACD,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YACjD,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,OAAc,EACxB,MAAM,CAAC,uBAAuB,CAC/B,CAAC;SACH;QACD,IAAI,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,CAAC,YAAY,CAClB,CAAC,EACD,SAAS,CAAC,aAAoB,EAC9BA,aAA+B,CAAC,uBAAuB,CACxD,CAAC;SACH;QACD,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;SACxC;KACF;IAyBD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAA0B;QACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAAe;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAA2B;QACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IACD,IAAI,aAAa,CAAC,KAAkD;QAClE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;KAC7B;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAAa;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC3C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YACpD,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,KAAK,EAAE;YACnC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtD,aAAa,EAAE,IAAI,CAAC,aAAa;kBAC7B,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;kBAC7B,SAAS;YACb,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACjE,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,KAAK,EAAE;YACnC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACnE,aAAa,EAAE,IAAI,CAAC,aAAa;kBAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC;kBAC1C,IAAI;YACR,MAAM,EACJ,MAAM,CACJ,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CACpE;SACJ,CAAC;KACH;;AAxOM,OAAE,GAAG,sBAAsB,CAAC;AAoQrC;;;MAGa,KAAK;;;;;IA8IhB,YAAY,MAAyC;QACnD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC1B;;;;;IApJD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,KAAK,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAgB;QAClC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC;QACrC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,IAAI,CAAC,CAAC;QACnD,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;QACzC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;QACtC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;QAC5C,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,IAAI,CAAC,CAAC;QACjD,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,KAAK,CAAC;QAC7C,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;QAC5C,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,IAAI,EAAE,CAAC;QAC9C,SAAS,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,IAAI,EAAE,CAAC;KACvD;;;;;;IAOD,OAAO,2BAA2B,CAAC,SAAgB,EAAE,OAAqB;QACxE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACpC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,WAAW,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBAC3C,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;oBACvC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACtC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACzC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;oBAC3C,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACtC,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAI,MAAM,EAAE,CAAC;oBACzC,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnB,MAAM,CAAC,2BAA2B,CACnC,CAAC;oBACF,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,CAChD,mBAAmB,CACpB,CAAC;oBACF,MAAM;gBACR,KAAK,EAAE;oBACL,SAAS,CAAC,QAAQ,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBAC1C,MAAM;gBACR,KAAK,EAAE;oBACL,SAAS,CAAC,YAAY,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBAC9C,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC/B;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAgB,EAAE,OAAqB;QACpE,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACtC;QACD,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;SAC7C;QACD,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;SACzC;QACD,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,SAAS,CAAC,UAAU,EAAE;YACxB,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;SAC7C;QACD,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YACjD,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,OAAc,EACxB,MAAM,CAAC,uBAAuB,CAC/B,CAAC;SACH;QACD,IAAI,SAAS,CAAC,QAAQ,EAAE;YACtB,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC7C;QACD,IAAI,SAAS,CAAC,YAAY,EAAE;YAC1B,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC;SACjD;KACF;IA+BD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAiB;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IACD,IAAI,WAAW,CAAC,KAAwB;QACtC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAAa;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IACD,IAAI,UAAU,CAAC,KAAa;QAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC1B;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAAc;QACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAA2B;QACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,KAAa;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;IACD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IACD,IAAI,YAAY,CAAC,KAAa;QAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;KAC5B;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,KAAK,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC5C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtD,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO;YACL,IAAI,EAAE,KAAK,CAAC,IAAI,CACd,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAC9D;YACD,WAAW,EACT,KAAK,CAAC,WAAW,CACf,IAAI,CAAC,WAAW,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS;kBACvD,CAAC;kBACD,IAAI,CAAC,WAAW,CACrB;YACH,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;KACH;;AAvRM,QAAE,GAAG,uBAAuB,CAAC;AAyRtC,WAAc,KAAK;IAgCjB,IAAY,IAoBX;IApBD,WAAY,IAAI;QACd,+CAAgB,CAAA;QAChB,6CAAe,CAAA;QACf,2CAAc,CAAA;QACd,2CAAc,CAAA;QACd,6CAAe,CAAA;QACf,2CAAc,CAAA;QACd,+CAAgB,CAAA;QAChB,+CAAgB,CAAA;QAChB,yCAAa,CAAA;QACb,6CAAe,CAAA;QACf,4CAAe,CAAA;QACf,gDAAiB,CAAA;QACjB,4CAAe,CAAA;QACf,8CAAgB,CAAA;QAChB,0CAAc,CAAA;QACd,kDAAkB,CAAA;QAClB,kDAAkB,CAAA;QAClB,8CAAgB,CAAA;QAChB,8CAAgB,CAAA;KACjB,EApBW,IAAI,GAAJ,UAAI,KAAJ,UAAI,QAoBf;IACD,IAAY,WAKX;IALD,WAAY,WAAW;QACrB,2EAAuB,CAAA;QACvB,6EAAwB,CAAA;QACxB,6EAAwB,CAAA;QACxB,6EAAwB,CAAA;KACzB,EALW,WAAW,GAAX,iBAAW,KAAX,iBAAW,QAKtB;AACH,CAAC,EA3Da,KAAK,KAAL,KAAK,QA2DlB;AAED;;;MAGa,IAAI;;;;;IAyHf,YAAY,MAAwC;QAClD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa;cACrC,IAAIA,aAA+B,CAAC,MAAM,CAAC,aAAa,CAAC;cACzD,SAAS,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KACzB;;;;;IA5HD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACpE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAe;QACjC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;QACtC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,IAAI,EAAE,CAAC;QAChD,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;QAC5C,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC;QAC/D,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;KAC1C;;;;;;IAOD,OAAO,2BAA2B,CAAC,SAAe,EAAE,OAAqB;QACvE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACtC,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAI,SAAS,EAAE,CAAC;oBAC5C,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnB,SAAS,CAAC,2BAA2B,CACtC,CAAC;oBACF,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,IAAI,EAAE,EAAE,IAAI,CACpD,mBAAmB,CACpB,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAI,MAAM,EAAE,CAAC;oBACzC,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnB,MAAM,CAAC,2BAA2B,CACnC,CAAC;oBACF,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,CAChD,mBAAmB,CACpB,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,aAAa,GAAG,IAAIA,aAA+B,EAAE,CAAC;oBAChE,OAAO,CAAC,WAAW,CACjB,SAAS,CAAC,aAAa,EACvBA,aAA+B,CAAC,2BAA2B,CAC5D,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC9B;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAe,EAAE,OAAqB;QACnE,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE;YACrD,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,SAAgB,EAC1B,SAAS,CAAC,uBAAuB,CAClC,CAAC;SACH;QACD,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YACjD,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,OAAc,EACxB,MAAM,CAAC,uBAAuB,CAC/B,CAAC;SACH;QACD,IAAI,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,CAAC,YAAY,CAClB,CAAC,EACD,SAAS,CAAC,aAAoB,EAC9BA,aAA+B,CAAC,uBAAuB,CACxD,CAAC;SACH;QACD,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;SACxC;KACF;IAuBD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IACD,IAAI,SAAS,CAAC,KAA8B;QAC1C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAA2B;QACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IACD,IAAI,aAAa,CAAC,KAAkD;QAClE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;KAC7B;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAAa;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC3C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC1D,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtD,aAAa,EAAE,IAAI,CAAC,aAAa;kBAC7B,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;kBAC7B,SAAS;YACb,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACvE,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACnE,aAAa,EAAE,IAAI,CAAC,aAAa;kBAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC;kBAC1C,IAAI;YACR,MAAM,EACJ,MAAM,CACJ,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CACpE;SACJ,CAAC;KACH;;AAvNM,OAAE,GAAG,sBAAsB,CAAC;AAiPrC;;;MAGa,SAAS;;;;;IAyFpB,YAAY,MAA6C;QACvD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC9B;;;;;IAxFD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,SAAS,EAAE,CAAC;QACjC,SAAS,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACzE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAoB;QACtC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;QACtC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;QACzC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;KAC7C;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAoB,EACpB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACtC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;oBACvC,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAI,MAAM,EAAE,CAAC;oBACzC,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnB,MAAM,CAAC,2BAA2B,CACnC,CAAC;oBACF,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,CAChD,mBAAmB,CACpB,CAAC;oBACF,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACnC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAoB,EAAE,OAAqB;QACxE,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;SACzC;QACD,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YACjD,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,OAAc,EACxB,MAAM,CAAC,uBAAuB,CAC/B,CAAC;SACH;KACF;IAiBD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAAa;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAA2B;QACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,SAAS,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAChD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;SACvD,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;SACpE,CAAC;KACH;;AA5JM,YAAE,GAAG,2BAA2B,CAAC;AAkL1C;;;MAGa,MAAM;;;;;IA2EjB,YAAY,MAA0C;QACpD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK;cACrB,IAAIC,GAAqB,CAAC,MAAM,CAAC,KAAK,CAAC;cACvC,SAAS,CAAC;QACd,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC3B;;;;;IA3ED,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,MAAM,EAAE,CAAC;QAC9B,MAAM,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACtE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAiB;QACnC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;QACtC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC;KAChD;;;;;;IAOD,OAAO,2BAA2B,CAAC,SAAiB,EAAE,OAAqB;QACzE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACtC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,IAAIA,GAAqB,EAAE,CAAC;oBAC9C,OAAO,CAAC,WAAW,CACjB,SAAS,CAAC,KAAK,EACfA,GAAqB,CAAC,2BAA2B,CAClD,CAAC;oBACF,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAChC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAiB,EAAE,OAAqB;QACrE,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,YAAY,CAClB,CAAC,EACD,SAAS,CAAC,KAAY,EACtBA,GAAqB,CAAC,uBAAuB,CAC9C,CAAC;SACH;KACF;IAiBD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAwC;QAChD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,MAAM,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC7C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,SAAS;SACtD,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,IAAI;SAC9D,CAAC;KACH;;AAvIM,SAAE,GAAG,wBAAwB;;ACphCtC;;;MAGa,GAAG;;;;;IAkJd,YAAY,MAAuC;QACjD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CACvC,CAAC,CAAC,KAAK,IAAIC,MAAwB,CAAC,CAAC,CAAC,CACvC,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa;cACrC,IAAIF,aAA+B,CAAC,MAAM,CAAC,aAAa,CAAC;cACzD,SAAS,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KACxB;;;;;IAzJD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,GAAG,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACnE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAc;QAChC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;QACtC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;QAC5C,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;QAC5C,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;QAC5C,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC;QAC/D,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;QAC1C,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;KAC1C;;;;;;IAOD,OAAO,2BAA2B,CAAC,SAAc,EAAE,OAAqB;QACtE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACtC,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAI,MAAM,EAAE,CAAC;oBACzC,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnB,MAAM,CAAC,2BAA2B,CACnC,CAAC;oBACF,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,CAChD,mBAAmB,CACpB,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAIE,MAAwB,EAAE,CAAC;oBAC3D,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnBA,MAAwB,CAAC,2BAA2B,CACrD,CAAC;oBACF,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,CAChD,mBAAmB,CACpB,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACzC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,aAAa,GAAG,IAAIF,aAA+B,EAAE,CAAC;oBAChE,OAAO,CAAC,WAAW,CACjB,SAAS,CAAC,aAAa,EACvBA,aAA+B,CAAC,2BAA2B,CAC5D,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAI,KAAK,EAAE,CAAC;oBACxC,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnB,KAAK,CAAC,2BAA2B,CAClC,CAAC;oBACF,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBACtE,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC7B;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAc,EAAE,OAAqB;QAClE,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YACjD,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,OAAc,EACxB,MAAM,CAAC,uBAAuB,CAC/B,CAAC;SACH;QACD,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YACjD,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,OAAc,EACxBE,MAAwB,CAAC,uBAAuB,CACjD,CAAC;SACH;QACD,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,CAAC,YAAY,CAClB,CAAC,EACD,SAAS,CAAC,aAAoB,EAC9BF,aAA+B,CAAC,uBAAuB,CACxD,CAAC;SACH;QACD,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;YAC/C,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,MAAa,EACvB,KAAK,CAAC,uBAAuB,CAC9B,CAAC;SACH;QACD,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;SACxC;KACF;IA6BD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAA2B;QACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAA6C;QACvD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IACD,IAAI,aAAa,CAAC,KAAkD;QAClE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;KAC7B;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAA0B;QACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAA+B;QACxC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,GAAG,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtD,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtD,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,aAAa,EAAE,IAAI,CAAC,aAAa;kBAC7B,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;kBAC7B,SAAS;YACb,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YACpD,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACnE,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACnE,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,aAAa,EAAE,IAAI,CAAC,aAAa;kBAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC;kBAC1C,IAAI;YACR,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACjE,MAAM,EACJG,MAAwB,CACtB,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CACpE;SACJ,CAAC;KACH;;AApQM,MAAE,GAAG,qBAAqB,CAAC;AAkSpC;;;MAGa,MAAM;;;;;IAsHjB,YAAY,MAA0C;QACpD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAClD,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CACvC,CAAC,CAAC,KAAK,IAAID,MAAwB,CAAC,CAAC,CAAC,CACvC,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC3B;;;;;IA3HD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,MAAM,EAAE,CAAC;QAC9B,MAAM,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACtE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAiB;QACnC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;QACtC,SAAS,CAAC,cAAc,GAAG,SAAS,CAAC,cAAc,IAAI,EAAE,CAAC;QAC1D,SAAS,CAAC,gBAAgB,GAAG,SAAS,CAAC,gBAAgB,IAAI,KAAK,CAAC;QACjE,SAAS,CAAC,eAAe,GAAG,SAAS,CAAC,eAAe,IAAI,EAAE,CAAC;QAC5D,SAAS,CAAC,iBAAiB,GAAG,SAAS,CAAC,iBAAiB,IAAI,KAAK,CAAC;QACnE,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;QAC5C,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;KAC1C;;;;;;IAOD,OAAO,2BAA2B,CAAC,SAAiB,EAAE,OAAqB;QACzE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACtC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,cAAc,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBAChD,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,gBAAgB,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBAChD,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,eAAe,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACjD,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,iBAAiB,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACjD,MAAM;gBACR,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAIA,MAAwB,EAAE,CAAC;oBAC3D,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnBA,MAAwB,CAAC,2BAA2B,CACrD,CAAC;oBACF,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,CAChD,mBAAmB,CACpB,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAChC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAiB,EAAE,OAAqB;QACrE,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,CAAC,cAAc,EAAE;YAC5B,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,cAAc,CAAC,CAAC;SAClD;QACD,IAAI,SAAS,CAAC,gBAAgB,EAAE;YAC9B,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,gBAAgB,CAAC,CAAC;SAClD;QACD,IAAI,SAAS,CAAC,eAAe,EAAE;YAC7B,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,eAAe,CAAC,CAAC;SACnD;QACD,IAAI,SAAS,CAAC,iBAAiB,EAAE;YAC/B,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,iBAAiB,CAAC,CAAC;SACnD;QACD,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YACjD,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,OAAc,EACxBA,MAAwB,CAAC,uBAAuB,CACjD,CAAC;SACH;QACD,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;SACxC;KACF;IA2BD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IACD,IAAI,cAAc,CAAC,KAAa;QAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;KAC9B;IACD,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;IACD,IAAI,gBAAgB,CAAC,KAAc;QACjC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;KAChC;IACD,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IACD,IAAI,eAAe,CAAC,KAAa;QAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;KAC/B;IACD,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;IACD,IAAI,iBAAiB,CAAC,KAAc;QAClC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;KACjC;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAA6C;QACvD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAA+B;QACxC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,MAAM,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC7C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtD,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACnE,MAAM,EACJC,MAAwB,CACtB,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CACpE;SACJ,CAAC;KACH;;AAlOM,SAAE,GAAG,wBAAwB,CAAC;AAgQvC;;;MAGa,KAAK;;;;;IAmEhB,YAAY,MAAyC;QACnD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC1B;;;;;IAjED,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,KAAK,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAgB;QAClC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;QACtC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;KACvC;;;;;;IAOD,OAAO,2BAA2B,CAAC,SAAgB,EAAE,OAAqB;QACxE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACtC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC/B;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAgB,EAAE,OAAqB;QACpE,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;SACxC;KACF;IAeD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,KAAK,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC5C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;KACH;;AA7HM,QAAE,GAAG,uBAAuB;;AChjBrC;;;MAGa,QAAQ;;;;;IAsEnB,YAAY,MAA4C;QACtD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC7B;;;;;IApED,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACxE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAmB;QACrC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,GAAG,CAAC;QAC7C,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC;KACxC;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAmB,EACnB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,eAAe,EAAE,CAAC;oBAC9C,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAClC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAmB,EAAE,OAAqB;QACvE,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;SAChD;QACD,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACxC;KACF;IAeD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC/C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC;KACtE;;AA7HM,WAAE,GAAG,0BAA0B;;ACJxC;;;MAGa,KAAK;;;;;IAgDhB,YAAY,MAAyC;QACnD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC1B;;;;;IA5CD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,KAAK,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAgB,KAAI;;;;;;IAOxC,OAAO,2BAA2B,CAAC,SAAgB,EAAE,OAAqB;QACxE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC/B;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAgB,EAAE,OAAqB,KAAI;;;;;IAe1E,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,KAAK,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC5C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO,EAAE,CAAC;KACX;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,EAAE,CAAC;KACX;;AAtFM,QAAE,GAAG,uBAAuB;;ACJrC;;;MAGa,SAAS;;;;;IA8DpB,YAAY,MAA6C;QACvD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC;QAC1C,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC9B;;;;;IA3DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,SAAS,EAAE,CAAC;QACjC,SAAS,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACzE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAoB;QACtC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,EAAE,CAAC;KACzC;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAoB,EACpB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;oBACrE,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACnC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAoB,EAAE,OAAqB;QACxE,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7C,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACjD;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAe;QACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,SAAS,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAChD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,KAAK,EAAE;SAClC,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC7B;;AA7GM,YAAE,GAAG,2BAA2B;;ICL7B;AAAZ,WAAY,SAAS;IACnB,qDAAc,CAAA;AAChB,CAAC,EAFW,SAAS,KAAT,SAAS,QAEpB;AACD;;;MAGa,MAAM;;;;;IA6EjB,YAAY,MAA0C;QACpD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,CAAC,IAAI,CAAC,MAAM,GAAG,MAAO,CAAC,MAAM;cACzB,MAAM,CAAC,IAAI,CAAC,MAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAChC,CAAC,CAAC,EAAE,CAAC,sCACA,CAAC,KACJ,CAAC,CAAC,GAAG,MAAO,CAAC,MAAO,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,MAAO,CAAC,MAAO,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,IACnE,EACF,EAAE,CACH;cACD,EAAE;YACJ,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC7B;;;;;IAlFD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,MAAM,EAAE,CAAC;QAC9B,MAAM,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACtE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAiB;QACnC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;KAC3C;;;;;;IAOD,OAAO,2BAA2B,CAAC,SAAiB,EAAE,OAAqB;QACzE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,MAAM,KAAK,GAAG,EAAS,CAAC;oBACxB,OAAO,CAAC,WAAW,CACjB,KAAK,EACL,MAAM,CAAC,WAAW,CAAC,2BAA2B,CAC/C,CAAC;oBACF,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;oBAC1C,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;oBAC1C,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAChC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAiB,EAAE,OAAqB;QACrE,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE;YACtB,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAa,CAAC,CAAC;YAEpD,IAAI,MAAM,CAAC,MAAM,EAAE;gBACjB,MAAM,UAAU,GAAG,MAAM;qBACtB,GAAG,CAAC,CAAC,GAAG,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAG,SAAS,CAAC,MAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;qBACnE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAW,CAAC,CAAC;gBAE5C,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,UAAU,EACV,MAAM,CAAC,WAAW,CAAC,uBAAuB,CAC3C,CAAC;aACH;SACF;KACF;IAqBD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAAgC;QACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,MAAM,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC7C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,MAAM,EAAE,IAAI,CAAC,MAAM;kBACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAC7B,CAAC,CAAC,EAAE,CAAC,sCACA,CAAC,KACJ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,SAAS,IAC7D,EACF,EAAE,CACH;kBACD,EAAE;SACP,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,MAAM;cACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAC7B,CAAC,CAAC,EAAE,CAAC,sCACA,CAAC,KACJ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,IACnE,EACF,EAAE,CACH;cACD,EAAE,CAAC;KACR;;AApJM,SAAE,GAAG,wBAAwB,CAAC;AAsJvC,WAAc,MAAM;;;;IAgBlB,MAAa,WAAW;;;;;QAoFtB,YAAY,MAA+C;YACzD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;YAChE,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAChC;;;;;QAlFD,OAAO,iBAAiB,CAAC,KAAiB;YACxC,MAAM,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;YACnC,WAAW,CAAC,2BAA2B,CACrC,QAAQ,EACR,IAAI,YAAY,CAAC,KAAK,CAAC,CACxB,CAAC;YACF,OAAO,QAAQ,CAAC;SACjB;;;;;QAMD,OAAO,YAAY,CAAC,SAAsB;YACxC,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,IAAI,EAAE,CAAC;YACpC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC;SAChD;;;;;;QAOD,OAAO,2BAA2B,CAChC,SAAsB,EACtB,OAAqB;YAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;gBAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;oBAAE,MAAM;gBAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;oBAC9B,KAAK,CAAC;wBACJ,SAAS,CAAC,GAAG,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;wBACrC,MAAM;oBACR,KAAK,CAAC;wBACJ,SAAS,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;wBAC9B,OAAO,CAAC,WAAW,CACjB,SAAS,CAAC,KAAK,EACf,KAAK,CAAC,2BAA2B,CAClC,CAAC;wBACF,MAAM;oBACR;wBACE,OAAO,CAAC,SAAS,EAAE,CAAC;iBACvB;aACF;YAED,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;SACrC;;;;;;QAOD,OAAO,uBAAuB,CAC5B,SAAsB,EACtB,OAAqB;YAErB,IAAI,SAAS,CAAC,GAAG,EAAE;gBACjB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;aACvC;YACD,IAAI,SAAS,CAAC,KAAK,EAAE;gBACnB,OAAO,CAAC,YAAY,CAClB,CAAC,EACD,SAAS,CAAC,KAAY,EACtB,KAAK,CAAC,uBAAuB,CAC9B,CAAC;aACH;SACF;QAeD,IAAI,GAAG;YACL,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QACD,IAAI,GAAG,CAAC,KAAa;YACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SACnB;QACD,IAAI,KAAK;YACP,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QACD,IAAI,KAAK,CAAC,KAAwB;YAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;;;;;QAMD,eAAe;YACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;YAClC,WAAW,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAClD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;SACjC;;;;QAKD,QAAQ;YACN,OAAO;gBACL,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,SAAS;aACtD,CAAC;SACH;;;;QAKD,MAAM;YACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;SACxB;;;;;;QAOD,cAAc;;QAEZ,OAA+B;YAE/B,OAAO;gBACL,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,IAAI;aAC9D,CAAC;SACH;;IA9IM,cAAE,GAAG,oCAAoC,CAAC;IADtC,kBAAW,cAgJvB,CAAA;AAkBH,CAAC,EAlLa,MAAM,KAAN,MAAM,QAkLnB;AAED;;;MAGa,KAAK;;;;;IA8GhB,YAAY,MAAyC;QAN7C,UAAK,GAAmB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;QAOlD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW;cACjC,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;cAC9B,SAAS,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;cAC7B,IAAI,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;cAC/B,SAAS,CAAC;QACd,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC1B;;;;;IApHD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,KAAK,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAgB,KAAI;;;;;;IAOxC,OAAO,2BAA2B,CAAC,SAAgB,EAAE,OAAqB;QACxE,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACzC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBAC7C,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBAC7C,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACzC,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,WAAW,GAAG,IAAI,MAAM,EAAE,CAAC;oBACrC,OAAO,CAAC,WAAW,CACjB,SAAS,CAAC,WAAW,EACrB,MAAM,CAAC,2BAA2B,CACnC,CAAC;oBACF,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;oBACtC,OAAO,CAAC,WAAW,CACjB,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,2BAA2B,CACtC,CAAC;oBACF,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC/B;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAgB,EAAE,OAAqB;QACpE,IAAI,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,KAAK,CAAC,EAAE;YACpD,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;SAC3C;QACD,IAAI,SAAS,CAAC,WAAW,IAAI,SAAS,CAAC,WAAW,KAAK,CAAC,EAAE;YACxD,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;SAC/C;QACD,IAAI,SAAS,CAAC,WAAW,IAAI,SAAS,CAAC,WAAW,KAAK,EAAE,EAAE;YACzD,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;SAC/C;QACD,IAAI,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,KAAK,KAAK,EAAE;YACxD,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;SAC3C;QACD,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,OAAO,CAAC,YAAY,CAClB,CAAC,EACD,SAAS,CAAC,WAAkB,EAC5B,MAAM,CAAC,uBAAuB,CAC/B,CAAC;SACH;QACD,IAAI,SAAS,CAAC,SAAS,EAAE;YACvB,OAAO,CAAC,YAAY,CAClB,CAAC,EACD,SAAS,CAAC,SAAgB,EAC1B,SAAS,CAAC,uBAAuB,CAClC,CAAC;SACH;KACF;IA6BD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IACD,IAAI,SAAS,CAAC,KAAgB;QAC5B,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,YAAY;gBACf,IAAI,CAAC,YAAY;oBACjB,IAAI,CAAC,UAAU;wBACf,IAAI,CAAC,YAAY;4BACjB,IAAI,CAAC,UAAU;gCACb,SAAS,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;SACvC;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IACD,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IACD,IAAI,WAAW,CAAC,KAAa;QAC3B,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,UAAU;gBACb,IAAI,CAAC,YAAY;oBACjB,IAAI,CAAC,UAAU;wBACf,IAAI,CAAC,YAAY;4BACjB,IAAI,CAAC,UAAU;gCACb,SAAS,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;SACzC;QACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IACD,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IACD,IAAI,WAAW,CAAC,KAAa;QAC3B,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,UAAU;gBACb,IAAI,CAAC,YAAY;oBACjB,IAAI,CAAC,UAAU;wBACf,IAAI,CAAC,YAAY;4BACjB,IAAI,CAAC,UAAU;gCACb,SAAS,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;SACzC;QACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IACD,IAAI,SAAS,CAAC,KAAc;QAC1B,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,UAAU;gBACb,IAAI,CAAC,YAAY;oBACjB,IAAI,CAAC,YAAY;wBACjB,IAAI,CAAC,YAAY;4BACjB,IAAI,CAAC,UAAU;gCACb,SAAS,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;SACvC;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IACD,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IACD,IAAI,WAAW,CAAC,KAAyB;QACvC,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,UAAU;gBACb,IAAI,CAAC,YAAY;oBACjB,IAAI,CAAC,YAAY;wBACjB,IAAI,CAAC,UAAU;4BACf,IAAI,CAAC,UAAU;gCACb,SAAS,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;SACzC;QACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IACD,IAAI,SAAS,CAAC,KAA4B;QACxC,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,UAAU;gBACb,IAAI,CAAC,YAAY;oBACjB,IAAI,CAAC,YAAY;wBACjB,IAAI,CAAC,UAAU;4BACf,IAAI,CAAC,YAAY;gCACf,SAAS,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;SACvC;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,KAAK,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC5C,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,SAAS;YACvE,SAAS,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,SAAS;SAClE,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,QAAQ,IAAI,CAAC,IAAI;YACf,KAAK,KAAK,CAAC,QAAQ,CAAC,SAAS;gBAC3B,OAAO,IAAI,CAAC;YACd,KAAK,KAAK,CAAC,QAAQ,CAAC,WAAW;gBAC7B,OAAO,IAAI,CAAC,WAAY,CAAC;YAC3B,KAAK,KAAK,CAAC,QAAQ,CAAC,WAAW;gBAC7B,OAAO,IAAI,CAAC,WAAY,CAAC;YAC3B,KAAK,KAAK,CAAC,QAAQ,CAAC,SAAS;gBAC3B,OAAO,IAAI,CAAC,SAAU,CAAC;YACzB,KAAK,KAAK,CAAC,QAAQ,CAAC,WAAW;gBAC7B,OAAO,IAAI,CAAC,WAAW;sBACnB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC;sBACxC,IAAI,CAAC;YACX,KAAK,KAAK,CAAC,QAAQ,CAAC,SAAS;gBAC3B,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;YACxE;gBACE,OAAO,IAAI,CAAC;SACf;KACF;;AAnRM,QAAE,GAAG,uBAAuB,CAAC;AAqRtC,WAAc,KAAK;IAuBjB,IAAY,QAQX;IARD,WAAY,QAAQ;QAClB,uCAAQ,CAAA;QACR,iDAAa,CAAA;QACb,qDAAe,CAAA;QACf,qDAAe,CAAA;QACf,iDAAa,CAAA;QACb,qDAAe,CAAA;QACf,iDAAa,CAAA;KACd,EARW,QAAQ,GAAR,cAAQ,KAAR,cAAQ,QAQnB;AACH,CAAC,EAhCa,KAAK,KAAL,KAAK,QAgClB;AAED;;;MAGa,SAAS;;;;;IAuEpB,YAAY,MAA6C;QACvD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC9B;;;;;IApED,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,SAAS,EAAE,CAAC;QACjC,SAAS,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACzE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAoB;QACtC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;KAC3C;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAoB,EACpB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,MAAM,mBAAmB,GAAG,IAAI,KAAK,EAAE,CAAC;oBACxC,OAAO,CAAC,WAAW,CACjB,mBAAmB,EACnB,KAAK,CAAC,2BAA2B,CAClC,CAAC;oBACF,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBACtE,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACnC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAoB,EAAE,OAAqB;QACxE,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;YAC/C,OAAO,CAAC,oBAAoB,CAC1B,CAAC,EACD,SAAS,CAAC,MAAa,EACvB,KAAK,CAAC,uBAAuB,CAC9B,CAAC;SACH;KACF;IAaD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACD,IAAI,MAAM,CAAC,KAA0B;QACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,SAAS,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAChD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;SACrD,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,KAC/B,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,IAAI,CACrC,CAAC;KACH;;AAxHM,YAAE,GAAG,2BAA2B;;AC/oBzC;;;MAGa,SAAS;;;;;IAsFpB,YAAY,MAA6C;QACvD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC9B;;;;;IApFD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,SAAS,EAAE,CAAC;QACjC,SAAS,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACzE,OAAO,QAAQ,CAAC;KACjB;IAED,OAAO,QAAQ,CAAC,IAAU;QACxB,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;QAElC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEzB,OAAO,SAAS,CAAC;KAClB;IAED,OAAO,aAAa,CAAC,OAAe;QAClC,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;QAElC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAEjC,OAAO,SAAS,CAAC;KAClB;;;;;IAMD,OAAO,YAAY,CAAC,SAAoB;QACtC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,GAAG,CAAC;QAC7C,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC;KACxC;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAoB,EACpB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,eAAe,EAAE,CAAC;oBAC9C,MAAM;gBACR,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACnC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAoB,EAAE,OAAqB;QACxE,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;SAChD;QACD,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACxC;KACF;IAeD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,SAAS,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAChD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;KAC3B;IAED,QAAQ,CAAC,IAAU;QACjB,IAAI,CAAC,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,GAAG,CAAC;KAC3C;IAED,MAAM;QACJ,OAAO,IAAI,IAAI,CACb,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,CAC9D,CAAC;KACH;IAED,aAAa,CAAC,OAAe;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;KAClC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,CAAC;KACpC;;AAhKM,YAAE,GAAG,2BAA2B;;ACjBzC;AAcA;;;MAGa,WAAW;;;;;IAiEtB,YAAY,MAA+C;QACzD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;IA9DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,WAAW,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAsB;QACxC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC;KACxC;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAsB,EACtB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACvC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACrC;;;;;;IAOD,OAAO,uBAAuB,CAC5B,SAAsB,EACtB,OAAqB;QAErB,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACzC;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,WAAW,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAClD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;AAhHM,cAAE,GAAG,6BAA6B,CAAC;AAgI5C;;;MAGa,UAAU;;;;;IA8DrB,YAAY,MAA8C;QACxD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC/B;;;;;IA3DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,UAAU,EAAE,CAAC;QAClC,UAAU,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1E,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAqB;QACvC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC;KACxC;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAqB,EACrB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACpC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAqB,EAAE,OAAqB;QACzE,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACxC;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,UAAU,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;AA7GM,aAAE,GAAG,4BAA4B,CAAC;AA6H3C;;;MAGa,UAAU;;;;;IA8DrB,YAAY,MAA8C;QACxD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC/B;;;;;IA3DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,UAAU,EAAE,CAAC;QAClC,UAAU,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1E,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAqB;QACvC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,GAAG,CAAC;KAC1C;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAqB,EACrB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,eAAe,EAAE,CAAC;oBAC5C,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACpC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAqB,EAAE,OAAqB;QACzE,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SAC9C;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,UAAU,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;AA7GM,aAAE,GAAG,4BAA4B,CAAC;AA6H3C;;;MAGa,WAAW;;;;;IAiEtB,YAAY,MAA+C;QACzD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;IA9DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,WAAW,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAsB;QACxC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,GAAG,CAAC;KAC1C;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAsB,EACtB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC;oBAC7C,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACrC;;;;;;IAOD,OAAO,uBAAuB,CAC5B,SAAsB,EACtB,OAAqB;QAErB,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SAC/C;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,WAAW,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAClD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;AAhHM,cAAE,GAAG,6BAA6B,CAAC;AAgI5C;;;MAGa,UAAU;;;;;IA8DrB,YAAY,MAA8C;QACxD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC/B;;;;;IA3DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,UAAU,EAAE,CAAC;QAClC,UAAU,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1E,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAqB;QACvC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC;KACxC;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAqB,EACrB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACpC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAqB,EAAE,OAAqB;QACzE,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACxC;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,UAAU,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;AA7GM,aAAE,GAAG,4BAA4B,CAAC;AA6H3C;;;MAGa,WAAW;;;;;IAiEtB,YAAY,MAA+C;QACzD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;IA9DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,WAAW,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAsB;QACxC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC;KACxC;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAsB,EACtB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACvC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACrC;;;;;;IAOD,OAAO,uBAAuB,CAC5B,SAAsB,EACtB,OAAqB;QAErB,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACzC;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,WAAW,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAClD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;AAhHM,cAAE,GAAG,6BAA6B,CAAC;AAgI5C;;;MAGa,SAAS;;;;;IA8DpB,YAAY,MAA6C;QACvD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC9B;;;;;IA3DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,SAAS,EAAE,CAAC;QACjC,SAAS,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACzE,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAoB;QACtC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC;KAC5C;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAoB,EACpB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACrC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACnC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAoB,EAAE,OAAqB;QACxE,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACvC;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAc;QACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,SAAS,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAChD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;AA7GM,YAAE,GAAG,2BAA2B,CAAC;AA6H1C;;;MAGa,WAAW;;;;;IAiEtB,YAAY,MAA+C;QACzD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;IA9DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,WAAW,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAsB;QACxC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,EAAE,CAAC;KACzC;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAsB,EACtB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACvC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACrC;;;;;;IAOD,OAAO,uBAAuB,CAC5B,SAAsB,EACtB,OAAqB;QAErB,IAAI,SAAS,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACzC;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,WAAW,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAClD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;AAhHM,cAAE,GAAG,6BAA6B,CAAC;AAgI5C;;;MAGa,UAAU;;;;;IA8DrB,YAAY,MAA8C;QACxD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC/B;;;;;IA3DD,OAAO,iBAAiB,CAAC,KAAiB;QACxC,MAAM,QAAQ,GAAG,IAAI,UAAU,EAAE,CAAC;QAClC,UAAU,CAAC,2BAA2B,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1E,OAAO,QAAQ,CAAC;KACjB;;;;;IAMD,OAAO,YAAY,CAAC,SAAqB;QACvC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,IAAI,UAAU,EAAE,CAAC;KACvD;;;;;;IAOD,OAAO,2BAA2B,CAChC,SAAqB,EACrB,OAAqB;QAErB,OAAO,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1B,IAAI,OAAO,CAAC,UAAU,EAAE;gBAAE,MAAM;YAEhC,QAAQ,OAAO,CAAC,cAAc,EAAE;gBAC9B,KAAK,CAAC;oBACJ,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;oBACtC,MAAM;gBACR;oBACE,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;QAED,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACpC;;;;;;IAOD,OAAO,uBAAuB,CAAC,SAAqB,EAAE,OAAqB;QACzE,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7C,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACxC;KACF;IAaD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAiB;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;IAMD,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,UAAU,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACjC;;;;IAKD,QAAQ;QACN,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,EAAE;SAC9D,CAAC;KACH;;;;IAKD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAOD,cAAc;;IAEZ,OAA+B;QAE/B,OAAO,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;KACzD;;AA7GM,aAAE,GAAG,4BAA4B;;ACtiC1C;;;;ACAA;;;;;;"}