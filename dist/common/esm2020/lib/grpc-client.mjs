/**
 * Type of the RPC
 */
export var GrpcCallType;
(function (GrpcCallType) {
    GrpcCallType[GrpcCallType["unary"] = 0] = "unary";
    GrpcCallType[GrpcCallType["serverStream"] = 1] = "serverStream";
    GrpcCallType[GrpcCallType["clientStream"] = 2] = "clientStream";
    GrpcCallType[GrpcCallType["bidiStream"] = 3] = "bidiStream";
})(GrpcCallType || (GrpcCallType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JwYy1jbGllbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9jb21tb24vc3JjL2xpYi9ncnBjLWNsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5R0E7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxZQUtYO0FBTEQsV0FBWSxZQUFZO0lBQ3RCLGlEQUFLLENBQUE7SUFDTCwrREFBWSxDQUFBO0lBQ1osK0RBQVksQ0FBQTtJQUNaLDJEQUFVLENBQUE7QUFDWixDQUFDLEVBTFcsWUFBWSxLQUFaLFlBQVksUUFLdkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBHcnBjRXZlbnQgfSBmcm9tICcuL2dycGMtZXZlbnQnO1xuaW1wb3J0IHsgR3JwY01lc3NhZ2UgfSBmcm9tICcuL2dycGMtbWVzc2FnZSc7XG5pbXBvcnQgeyBHcnBjTWVzc2FnZUNsYXNzIH0gZnJvbSAnLi9ncnBjLW1lc3NhZ2UtY2xhc3MnO1xuaW1wb3J0IHsgR3JwY01ldGFkYXRhIH0gZnJvbSAnLi9ncnBjLW1ldGFkYXRhJztcblxuLyoqXG4gKiBUaGlzIGludGVyZmFjZSBkZXNjcmliZXMgdHJhbnNwb3J0IGxheWVyIGNsaWVudCBmYWN0b3J5LCB3aGljaCBpcyBpbXBvcnRhbnQgaW4gaW5zdGFudGlhdGluZyBHcnBjQ2xpZW50XG4gKiBiZWNhdXNlIHRoZSBHcnBjQ2xpZW50RmFjdG9yeSBpcyBib3VuZCB0byB0aGUgZGVwZW5kZW5jeSBpbmplY3Rpb24gKHVzZSBjb25zdHJ1Y3RvciB0byBpbmplY3Qgbm9ybWFsIEFuZ3VsYXIgc2VydmljZXMgJiBjb25maWcpLFxuICogd2hpbGUgR3JwY0NsaWVudCBoYXMgbm9uZVxuICovXG5leHBvcnQgaW50ZXJmYWNlIEdycGNDbGllbnRGYWN0b3J5PFNUPiB7XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhIEdycGNDbGllbnRcbiAgICpcbiAgICogQHBhcmFtIHNlcnZpY2VJZCBhIHNlcnZpY2UgdHlwZSBpbiBwcm90byAocGFzc2VkIGluIGJ5IGdlbmVyYXRlZCBzZXJ2aWNlIGNsaWVudCksIGUuZy5cbiAgICogQHBhcmFtIHNldHRpbmdzIHNldHRpbmdzIGZvciB1bmRlcmx5aW5nIGdycGMgY2xpZW50IGltcGxlbWVudGF0aW9uXG4gICAqIEByZXR1cm5zIG5ldyBHcnBjQ2xpZW50XG4gICAqL1xuICBjcmVhdGVDbGllbnQoc2VydmljZUlkOiBzdHJpbmcsIHNldHRpbmdzOiBTVCk6IEdycGNDbGllbnQ8U1Q+O1xuXG59XG5cbi8qKlxuICogQSB0cmFuc3BvcnQgbGF5ZXIgY2xpZW50IGltcGxlbWVudGF0aW9uIGludGVyZmFjZVxuICogSW5zdGFuY2Ugb2YgR3JwY0NsaWVudCBpcyBjcmVhdGVkIGZvciBldmVyeSBnUlBDIHNlcnZpY2UgY2xpZW50IGJ5IGNvcnJlc3BvbmRpbmcgR3JwY0NsaWVudEZhY3RvcnlcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBHcnBjQ2xpZW50PFNUPiB7XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBjb3B5IG9mIGN1cnJlbnQgY2xpZW50IHNldHRpbmdzXG4gICAqL1xuICBnZXRTZXR0aW5ncygpOiBTVDtcblxuICAvKipcbiAgICogSGFuZGxlIHVuYXJ5IFJQQ1xuICAgKlxuICAgKiBAcGFyYW0gcGF0aCBnUlBDIG1ldGhvZCBwYXRoIChycGMgcGF0aClcbiAgICogQHBhcmFtIHJlcSByZXF1ZXN0IGRhdGFcbiAgICogQHBhcmFtIG1ldGFkYXRhIHJlcXVlc3QgbWV0YWRhdGFcbiAgICogQHBhcmFtIHJlcWNsc3MgcmVxdWVzdCBtZXNzYWdlIGNsYXNzXG4gICAqIEBwYXJhbSByZXNjbHNzIHJlc3BvbnNlIG1lc3NhZ2UgY2xhc3NcbiAgICovXG4gIHVuYXJ5PFEgZXh0ZW5kcyBHcnBjTWVzc2FnZSwgUyBleHRlbmRzIEdycGNNZXNzYWdlPihcbiAgICBwYXRoOiBzdHJpbmcsXG4gICAgcmVxOiBRLFxuICAgIG1ldGFkYXRhOiBHcnBjTWV0YWRhdGEsXG4gICAgcmVxY2xzczogR3JwY01lc3NhZ2VDbGFzczxRPixcbiAgICByZXNjbHNzOiBHcnBjTWVzc2FnZUNsYXNzPFM+LFxuICApOiBPYnNlcnZhYmxlPEdycGNFdmVudDxTPj47XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBzZXJ2ZXIgc3RyZWFtIFJQQ1xuICAgKlxuICAgKiBAcGFyYW0gcGF0aCBnUlBDIG1ldGhvZCBwYXRoIChycGMgcGF0aClcbiAgICogQHBhcmFtIHJlcSByZXF1ZXN0IGRhdGFcbiAgICogQHBhcmFtIG1ldGFkYXRhIHJlcXVlc3QgbWV0YWRhdGFcbiAgICogQHBhcmFtIHJlcWNsc3MgcmVxdWVzdCBtZXNzYWdlIGNsYXNzXG4gICAqIEBwYXJhbSByZXNjbHNzIHJlc3BvbnNlIG1lc3NhZ2UgY2xhc3NcbiAgICovXG4gIHNlcnZlclN0cmVhbTxRIGV4dGVuZHMgR3JwY01lc3NhZ2UsIFMgZXh0ZW5kcyBHcnBjTWVzc2FnZT4oXG4gICAgcGF0aDogc3RyaW5nLFxuICAgIHJlcTogUSxcbiAgICBtZXRhZGF0YTogR3JwY01ldGFkYXRhLFxuICAgIHJlcWNsc3M6IEdycGNNZXNzYWdlQ2xhc3M8UT4sXG4gICAgcmVzY2xzczogR3JwY01lc3NhZ2VDbGFzczxTPixcbiAgKTogT2JzZXJ2YWJsZTxHcnBjRXZlbnQ8Uz4+O1xuXG4gIC8qKlxuICAgKiBIYW5kbGUgY2xpZW50IHN0cmVhbSBSUENcbiAgICpcbiAgICogQHBhcmFtIHBhdGggZ1JQQyBtZXRob2QgcGF0aCAocnBjIHBhdGgpXG4gICAqIEBwYXJhbSBpbnB1dFN0cmVhbSBzdHJlYW1lZCByZXF1ZXN0IGRhdGFcbiAgICogQHBhcmFtIG1ldGFkYXRhIHJlcXVlc3QgbWV0YWRhdGFcbiAgICogQHBhcmFtIHJlcWNsc3MgcmVxdWVzdCBtZXNzYWdlIGNsYXNzXG4gICAqIEBwYXJhbSByZXNjbHNzIHJlc3BvbnNlIG1lc3NhZ2UgY2xhc3NcbiAgICovXG4gIGNsaWVudFN0cmVhbTxRIGV4dGVuZHMgR3JwY01lc3NhZ2UsIFMgZXh0ZW5kcyBHcnBjTWVzc2FnZT4oXG4gICAgcGF0aDogc3RyaW5nLFxuICAgIGlucHV0U3RyZWFtOiBPYnNlcnZhYmxlPFE+LFxuICAgIG1ldGFkYXRhOiBHcnBjTWV0YWRhdGEsXG4gICAgcmVxY2xzczogR3JwY01lc3NhZ2VDbGFzczxRPixcbiAgICByZXNjbHNzOiBHcnBjTWVzc2FnZUNsYXNzPFM+LFxuICApOiBPYnNlcnZhYmxlPEdycGNFdmVudDxTPj47XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBiaWRpcmVjdGlvbmFsIHN0cmVhbSBSUENcbiAgICpcbiAgICogQHBhcmFtIHBhdGggZ1JQQyBtZXRob2QgcGF0aCAocnBjIHBhdGgpXG4gICAqIEBwYXJhbSBpbnB1dFN0cmVhbSBzdHJlYW1lZCByZXF1ZXN0IGRhdGFcbiAgICogQHBhcmFtIG1ldGFkYXRhIHJlcXVlc3QgbWV0YWRhdGFcbiAgICogQHBhcmFtIHJlcWNsc3MgcmVxdWVzdCBtZXNzYWdlIGNsYXNzXG4gICAqIEBwYXJhbSByZXNjbHNzIHJlc3BvbnNlIG1lc3NhZ2UgY2xhc3NcbiAgICovXG4gIGJpZGlTdHJlYW08USBleHRlbmRzIEdycGNNZXNzYWdlLCBTIGV4dGVuZHMgR3JwY01lc3NhZ2U+KFxuICAgIHBhdGg6IHN0cmluZyxcbiAgICBpbnB1dFN0cmVhbTogT2JzZXJ2YWJsZTxRPixcbiAgICBtZXRhZGF0YTogR3JwY01ldGFkYXRhLFxuICAgIHJlcWNsc3M6IEdycGNNZXNzYWdlQ2xhc3M8UT4sXG4gICAgcmVzY2xzczogR3JwY01lc3NhZ2VDbGFzczxTPixcbiAgKTogT2JzZXJ2YWJsZTxHcnBjRXZlbnQ8Uz4+O1xuXG59XG5cbi8qKlxuICogVHlwZSBvZiB0aGUgUlBDXG4gKi9cbmV4cG9ydCBlbnVtIEdycGNDYWxsVHlwZSB7XG4gIHVuYXJ5LFxuICBzZXJ2ZXJTdHJlYW0sXG4gIGNsaWVudFN0cmVhbSxcbiAgYmlkaVN0cmVhbSxcbn1cblxuLyoqXG4gKiBUaGlzIGludGVyZmFjZSBkZXNjcmliZXMgdGhlIGludGVybmFsIGdSUEMgcmVxdWVzdCBkYXRhIHN0cnVjdHVyZVxuICovXG5leHBvcnQgaW50ZXJmYWNlIEdycGNSZXF1ZXN0PFEgZXh0ZW5kcyBHcnBjTWVzc2FnZSwgUyBleHRlbmRzIEdycGNNZXNzYWdlPiB7XG4gIHBhdGg6IHN0cmluZztcbiAgY2xpZW50OiBHcnBjQ2xpZW50PGFueT47XG4gIHR5cGU6IEdycGNDYWxsVHlwZTtcbiAgcmVxdWVzdERhdGE6IFEgfCBPYnNlcnZhYmxlPFE+O1xuICByZXF1ZXN0TWV0YWRhdGE6IEdycGNNZXRhZGF0YTtcbiAgcmVxdWVzdENsYXNzOiBHcnBjTWVzc2FnZUNsYXNzPFE+O1xuICByZXNwb25zZUNsYXNzOiBHcnBjTWVzc2FnZUNsYXNzPFM+O1xufVxuIl19