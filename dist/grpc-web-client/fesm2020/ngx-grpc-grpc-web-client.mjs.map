{"version":3,"file":"ngx-grpc-grpc-web-client.mjs","sources":["../../../packages/grpc-web-client/src/lib/tokens.ts","../../../packages/grpc-web-client/src/lib/grpc-web-client.ts","../../../packages/grpc-web-client/src/lib/grpc-web-client.module.ts","../../../packages/grpc-web-client/src/ngx-grpc-grpc-web-client.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Default configuration for grpc-web clients. Will be used for every GrpcWebClient unless service-specific config is provided\n *\n * Example:\n *\n * ```\n * providers: [\n *   { provide: GRPC_WEB_CLIENT_DEFAULT_SETTINGS, useClass: { host: 'localhost:4321' } },\n * ]\n * ```\n */\nexport const GRPC_WEB_CLIENT_DEFAULT_SETTINGS = new InjectionToken('GRPC_WEB_CLIENT_DEFAULT_SETTINGS');\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { GrpcClient, GrpcClientFactory, GrpcDataEvent, GrpcEvent, GrpcMessage, GrpcMessageClass, GrpcMetadata, GrpcStatusEvent } from '@ngx-grpc/common';\nimport { GrpcWebClientBase, MethodDescriptor } from 'grpc-web';\nimport { Observable } from 'rxjs';\nimport { GRPC_WEB_CLIENT_DEFAULT_SETTINGS } from './tokens';\n\n/**\n * Settings for the chosen implementation of GrpcClient\n */\nexport interface GrpcWebClientSettings {\n  host: string;\n  format?: string;\n  suppressCorsPreflight?: boolean;\n  withCredentials?: boolean;\n}\n\n/**\n * GrpcClientFactory implementation based on grpc-web\n */\n@Injectable()\nexport class GrpcWebClientFactory implements GrpcClientFactory<GrpcWebClientSettings> {\n\n  constructor(\n    @Optional() @Inject(GRPC_WEB_CLIENT_DEFAULT_SETTINGS) private defaultSettings: GrpcWebClientSettings,\n  ) { }\n\n  createClient(serviceId: string, customSettings: GrpcWebClientSettings) {\n    const settings = customSettings || this.defaultSettings;\n\n    if (!settings) {\n      throw new Error(`grpc-web client factory: no settings provided for ${serviceId}`);\n    }\n\n    return new GrpcWebClient({ ...settings });\n  }\n\n}\n\n/**\n * GrpcClient implementation based on grpc-web\n */\nexport class GrpcWebClient implements GrpcClient<GrpcWebClientSettings> {\n\n  private client: GrpcWebClientBase;\n\n  constructor(\n    private settings: GrpcWebClientSettings,\n  ) {\n    this.client = new GrpcWebClientBase(this.settings);\n  }\n\n  getSettings(): GrpcWebClientSettings {\n    return { ...this.settings };\n  }\n\n  unary<Q extends GrpcMessage, S extends GrpcMessage>(\n    path: string,\n    req: Q,\n    metadata: GrpcMetadata,\n    reqclss: GrpcMessageClass<Q>,\n    resclss: GrpcMessageClass<S>,\n  ): Observable<GrpcEvent<S>> {\n    const descriptor = new MethodDescriptor(\n      path,\n      'unary',\n      reqclss,\n      resclss,\n      (request: Q) => request.serializeBinary(),\n      resclss.deserializeBinary,\n    );\n\n    return new Observable(obs => {\n      const stream = this.client.rpcCall(\n        this.settings.host + path,\n        req,\n        metadata?.toObject() ?? {},\n        descriptor,\n        (error, data) => {\n          if (error) {\n            obs.next(new GrpcStatusEvent(error.code, error.message, new GrpcMetadata((error as any).metadata)));\n            obs.complete();\n          } else {\n            obs.next(new GrpcDataEvent(data as any));\n          }\n        },\n      );\n\n      // take only status 0 because unary error already includes non-zero statuses\n      stream.on('status', status => status.code === 0 ? obs.next(new GrpcStatusEvent(status.code, status.details, new GrpcMetadata(status.metadata))) : null);\n      stream.on('end', () => obs.complete());\n\n      return () => stream.cancel();\n    });\n  }\n\n  serverStream<Q extends GrpcMessage, S extends GrpcMessage>(\n    path: string,\n    req: Q,\n    metadata: GrpcMetadata,\n    reqclss: GrpcMessageClass<Q>,\n    resclss: GrpcMessageClass<S>,\n  ): Observable<GrpcEvent<S>> {\n    const descriptor = new MethodDescriptor(\n      path,\n      'server_streaming',\n      reqclss,\n      resclss,\n      (request: Q) => request.serializeBinary(),\n      resclss.deserializeBinary,\n    );\n\n    return new Observable(obs => {\n      const stream = this.client.serverStreaming(\n        this.settings.host + path,\n        req,\n        metadata?.toObject() ?? {},\n        descriptor,\n      );\n\n      stream.on('status', status => obs.next(new GrpcStatusEvent(status.code, status.details, new GrpcMetadata(status.metadata))));\n      stream.on('error', error => {\n        obs.next(new GrpcStatusEvent(error.code, error.message, new GrpcMetadata((error as any).metadata)));\n        obs.complete();\n      });\n      stream.on('data', data => obs.next(new GrpcDataEvent(data as any)));\n      stream.on('end', () => obs.complete());\n\n      return () => stream.cancel();\n    });\n  }\n\n  clientStream = () => {\n    throw new Error('Client streaming not supported');\n  };\n\n  bidiStream = () => {\n    throw new Error('Bidirectional streaming not supported');\n  };\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { GRPC_CLIENT_FACTORY } from '@ngx-grpc/core';\nimport { GrpcWebClientFactory, GrpcWebClientSettings } from './grpc-web-client';\nimport { GRPC_WEB_CLIENT_DEFAULT_SETTINGS } from './tokens';\n\nexport interface GrpcWebClientRootOptions {\n  settings?: GrpcWebClientSettings;\n}\n\nexport interface GrpcWebClientChildOptions {\n  settings?: GrpcWebClientSettings;\n}\n\n@NgModule()\nexport class GrpcWebClientModule {\n\n  /**\n   * Create GrpcWebClientModule for using in AppModule (application root module)\n   * You can provide the options here instead of injecting corresponding tokens separately\n   */\n  public static forRoot(options?: GrpcWebClientRootOptions): ModuleWithProviders<GrpcWebClientModule> {\n    const providers: Provider[] = [{ provide: GRPC_CLIENT_FACTORY, useClass: GrpcWebClientFactory }];\n\n    if (options?.settings) {\n      providers.push({ provide: GRPC_WEB_CLIENT_DEFAULT_SETTINGS, useValue: options.settings });\n    }\n\n    return { ngModule: GrpcWebClientModule, providers };\n  }\n\n  /**\n   * Create GrpcWebClientModule for using in children modules (incl. lazy modules)\n   * You can provide the options here instead of injecting corresponding tokens separately\n   */\n  public static forChild(options?: GrpcWebClientChildOptions): ModuleWithProviders<GrpcWebClientModule> {\n    const providers: Provider[] = [{ provide: GRPC_CLIENT_FACTORY, useClass: GrpcWebClientFactory }];\n\n    if (options?.settings) {\n      providers.push({ provide: GRPC_WEB_CLIENT_DEFAULT_SETTINGS, useValue: options.settings });\n    }\n\n    return { ngModule: GrpcWebClientModule, providers };\n  }\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}