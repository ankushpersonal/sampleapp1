{"version":3,"file":"ngx-grpc-improbable-eng-grpc-web-client.mjs","sources":["../../../packages/improbable-eng-grpc-web-client/src/lib/tokens.ts","../../../packages/improbable-eng-grpc-web-client/src/lib/improbable-eng-grpc-web-client.ts","../../../packages/improbable-eng-grpc-web-client/src/lib/improbable-eng-grpc-web-client.module.ts","../../../packages/improbable-eng-grpc-web-client/src/ngx-grpc-improbable-eng-grpc-web-client.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Default configuration for grpc-web clients. Will be used for every GrpcWebClient unless service-specific config is provided\n *\n * Example:\n *\n * ```\n * providers: [\n *   { provide: IMPROBABLE_ENG_GRPC_WEB_CLIENT_DEFAULT_SETTINGS, useClass: { host: 'localhost:4321' } },\n * ]\n * ```\n */\nexport const IMPROBABLE_ENG_GRPC_WEB_CLIENT_DEFAULT_SETTINGS = new InjectionToken('IMPROBABLE_ENG_GRPC_WEB_CLIENT_DEFAULT_SETTINGS');\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { grpc } from '@improbable-eng/grpc-web';\nimport { Metadata } from '@improbable-eng/grpc-web/dist/typings/metadata';\nimport { TransportFactory } from '@improbable-eng/grpc-web/dist/typings/transports/Transport';\nimport { GrpcClient, GrpcClientFactory, GrpcDataEvent, GrpcEvent, GrpcMessage, GrpcMessageClass, GrpcMetadata, GrpcStatusEvent } from '@ngx-grpc/common';\nimport { Observable } from 'rxjs';\nimport { IMPROBABLE_ENG_GRPC_WEB_CLIENT_DEFAULT_SETTINGS } from './tokens';\n\n/**\n * Settings for the chosen implementation of GrpcClient\n */\nexport interface ImprobableEngGrpcWebClientSettings {\n  host: string;\n  transport: TransportFactory | ImprobableEngGrpcWebClientTransports;\n  debug?: boolean;\n}\n\n/**\n * Settings for the transport implementation for each request\n */\nexport interface ImprobableEngGrpcWebClientTransports {\n  unary: TransportFactory;\n  serverStream: TransportFactory;\n  clientStream: TransportFactory;\n  bidiStream: TransportFactory;\n}\n\n/**\n * GrpcClientFactory implementation based on @improbable-eng/grpc-web\n */\n@Injectable()\nexport class ImprobableEngGrpcWebClientFactory implements GrpcClientFactory<ImprobableEngGrpcWebClientSettings> {\n\n  constructor(\n    @Optional() @Inject(IMPROBABLE_ENG_GRPC_WEB_CLIENT_DEFAULT_SETTINGS) private defaultSettings: ImprobableEngGrpcWebClientSettings,\n  ) { }\n\n  createClient(serviceId: string, customSettings: ImprobableEngGrpcWebClientSettings) {\n    const settings = customSettings || this.defaultSettings;\n\n    if (!settings) {\n      throw new Error(`grpc-web client factory: no settings provided for ${serviceId}`);\n    }\n\n    return new ImprobableEngGrpcWebClient(serviceId, { ...settings });\n  }\n\n}\n\n/**\n * GrpcClient implementation based on grpc-web\n */\nexport class ImprobableEngGrpcWebClient implements GrpcClient<ImprobableEngGrpcWebClientSettings> {\n\n  private client: any;\n\n  constructor(\n    private serviceId: string,\n    private settings: ImprobableEngGrpcWebClientSettings,\n  ) {\n    // implementation is based on https://github.com/improbable-eng/grpc-web/blob/master/client/grpc-web-react-example/ts/_proto/examplecom/library/book_service_pb_service.js\n    this.client = (() => {\n      function Client() { }\n      Client.serviceName = this.serviceId;\n      return Client;\n    })();\n  }\n\n  getSettings(): ImprobableEngGrpcWebClientSettings {\n    return { ...this.settings };\n  }\n\n  unary<Q extends GrpcMessage, S extends GrpcMessage>(\n    path: string,\n    request: Q,\n    metadata: GrpcMetadata,\n    reqclss: GrpcMessageClass<Q>,\n    resclss: GrpcMessageClass<S>,\n  ): Observable<GrpcEvent<S>> {\n    return new Observable(obs => {\n      const methodName = path.split('/')[2];\n\n      const methodDescriptor = {\n        methodName,\n        service: this.client,\n        requestStream: false,\n        responseStream: false,\n        requestType: reqclss,\n        responseType: resclss,\n      };\n\n      const client = grpc.unary(methodDescriptor as any, {\n        request,\n        host: this.settings.host,\n        metadata: new grpc.Metadata(metadata?.toObject() ?? {}),\n        transport: this.getTransport('unary'),\n        debug: this.settings.debug,\n        onEnd: (response) => {\n          obs.next(new GrpcStatusEvent(response.status, response.statusMessage, this.castResponseMetadata(response.trailers)));\n\n          if (response.status !== grpc.Code.OK) {\n            obs.complete();\n          } else {\n            obs.next(new GrpcDataEvent<S>(response.message as S));\n            obs.complete();\n          }\n        },\n      });\n\n      return () => client.close();\n    });\n\n  }\n\n  serverStream<Q extends GrpcMessage, S extends GrpcMessage>(\n    path: string,\n    request: Q,\n    metadata: GrpcMetadata,\n    reqclss: GrpcMessageClass<Q>,\n    resclss: GrpcMessageClass<S>,\n  ): Observable<GrpcEvent<S>> {\n    const methodName = path.split('/')[2];\n\n    const methodDescriptor = {\n      methodName,\n      service: this.client,\n      requestStream: false,\n      responseStream: true,\n      requestType: reqclss,\n      responseType: resclss,\n    };\n\n    return new Observable(obs => {\n      const client = grpc.invoke(methodDescriptor, {\n        request,\n        host: this.settings.host,\n        metadata: new grpc.Metadata(metadata?.toObject() ?? {}),\n        transport: this.getTransport('serverStream'),\n        debug: this.settings.debug,\n        onMessage: (data) => {\n          obs.next(new GrpcDataEvent(data as any));\n        },\n        onEnd: (status, statusMessage, trailers) => {\n          obs.next(new GrpcStatusEvent(status, statusMessage, this.castResponseMetadata(trailers)));\n          obs.complete();\n        },\n      });\n\n      return () => client.close();\n    });\n  }\n\n  clientStream<Q extends GrpcMessage, S extends GrpcMessage>(\n    path: string,\n    inputStream: Observable<Q>,\n    metadata: GrpcMetadata,\n    reqclss: GrpcMessageClass<Q>,\n    resclss: GrpcMessageClass<S>,\n  ): Observable<GrpcEvent<S>> {\n    const methodName = path.split('/')[2];\n\n    const methodDescriptor = {\n      methodName,\n      service: this.client,\n      requestStream: true,\n      responseStream: false,\n      requestType: reqclss,\n      responseType: resclss,\n    };\n\n    return new Observable(obs => {\n      const client = grpc.client(methodDescriptor, {\n        host: this.settings.host,\n        transport: this.getTransport('clientStream'),\n        debug: this.settings.debug,\n      });\n\n      client.start(new grpc.Metadata(metadata?.toObject() ?? {}));\n\n      const inputStreamSub = inputStream.subscribe(\n        message => {\n          client.send(message);\n        },\n        () => {\n          client.close();\n        },\n        () => {\n          client.finishSend();\n        },\n      );\n\n      client.onMessage(data => obs.next(new GrpcDataEvent(data as any)));\n\n      client.onEnd((status, statusMessage, trailers) => {\n        obs.next(new GrpcStatusEvent(status, statusMessage, this.castResponseMetadata(trailers)));\n        obs.complete();\n      });\n\n      return () => {\n        inputStreamSub.unsubscribe();\n        client.close();\n      };\n    });\n  }\n\n  bidiStream<Q extends GrpcMessage, S extends GrpcMessage>(\n    path: string,\n    inputStream: Observable<Q>,\n    metadata: GrpcMetadata,\n    reqclss: GrpcMessageClass<Q>,\n    resclss: GrpcMessageClass<S>,\n  ): Observable<GrpcEvent<S>> {\n    const methodName = path.split('/')[2];\n\n    const methodDescriptor = {\n      methodName,\n      service: this.client,\n      requestStream: true,\n      responseStream: false,\n      requestType: reqclss,\n      responseType: resclss,\n    };\n\n    return new Observable(obs => {\n      const client = grpc.client(methodDescriptor, {\n        host: this.settings.host,\n        transport: this.getTransport('bidiStream'),\n        debug: this.settings.debug,\n      });\n\n      client.start(new grpc.Metadata(metadata?.toObject() ?? {}));\n\n      const inputStreamSub = inputStream.subscribe(\n        message => {\n          client.send(message);\n        },\n        () => {\n          client.close();\n        },\n        () => {\n          client.finishSend();\n        },\n      );\n\n      client.onMessage(data => obs.next(new GrpcDataEvent(data as any)));\n\n      client.onEnd((status, statusMessage, trailers) => {\n        obs.next(new GrpcStatusEvent(status, statusMessage, this.castResponseMetadata(trailers)));\n        obs.complete();\n      });\n\n      return () => {\n        inputStreamSub.unsubscribe();\n        client.close();\n      };\n    });\n  }\n\n  private castResponseMetadata({ headersMap }: Metadata) {\n    return new GrpcMetadata(Object.keys(headersMap).reduce((r, k) => ({ ...r, [k]: headersMap[k][0] }), {}));\n  }\n\n  private getTransport(key: keyof ImprobableEngGrpcWebClientTransports) {\n    const { transport } = this.settings;\n\n    return typeof transport === 'function' ? transport : transport[key];\n  }\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { GRPC_CLIENT_FACTORY } from '@ngx-grpc/core';\nimport { ImprobableEngGrpcWebClientFactory, ImprobableEngGrpcWebClientSettings } from './improbable-eng-grpc-web-client';\nimport { IMPROBABLE_ENG_GRPC_WEB_CLIENT_DEFAULT_SETTINGS } from './tokens';\n\nexport interface ImprobableEngGrpcWebClientRootOptions {\n  settings?: ImprobableEngGrpcWebClientSettings;\n}\n\nexport interface ImprobableEngGrpcWebClientChildOptions {\n  settings?: ImprobableEngGrpcWebClientSettings;\n}\n\n@NgModule()\nexport class ImprobableEngGrpcWebClientModule {\n\n  /**\n   * Create ImprobableEngGrpcWebClientModule for using in AppModule (application root module)\n   * You can provide the options here instead of injecting corresponding tokens separately\n   */\n  public static forRoot(options?: ImprobableEngGrpcWebClientRootOptions): ModuleWithProviders<ImprobableEngGrpcWebClientModule> {\n    const providers: Provider[] = [{ provide: GRPC_CLIENT_FACTORY, useClass: ImprobableEngGrpcWebClientFactory }];\n\n    if (options?.settings) {\n      providers.push({ provide: IMPROBABLE_ENG_GRPC_WEB_CLIENT_DEFAULT_SETTINGS, useValue: options.settings });\n    }\n\n    return { ngModule: ImprobableEngGrpcWebClientModule, providers };\n  }\n\n  /**\n   * Create ImprobableEngGrpcWebClientModule for using in children modules (incl. lazy modules)\n   * You can provide the options here instead of injecting corresponding tokens separately\n   */\n  public static forChild(options?: ImprobableEngGrpcWebClientChildOptions): ModuleWithProviders<ImprobableEngGrpcWebClientModule> {\n    const providers: Provider[] = [{ provide: GRPC_CLIENT_FACTORY, useClass: ImprobableEngGrpcWebClientFactory }];\n\n    if (options?.settings) {\n      providers.push({ provide: IMPROBABLE_ENG_GRPC_WEB_CLIENT_DEFAULT_SETTINGS, useValue: options.settings });\n    }\n\n    return { ngModule: ImprobableEngGrpcWebClientModule, providers };\n  }\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}